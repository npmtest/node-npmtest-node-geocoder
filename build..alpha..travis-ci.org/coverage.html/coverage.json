{"/home/travis/build/npmtest/node-npmtest-node-geocoder/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_node_geocoder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/lib.npmtest_node_geocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/lib.npmtest_node_geocoder.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_node_geocoder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_node_geocoder = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_node_geocoder = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-node-geocoder && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_node_geocoder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_node_geocoder","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_node_geocoder.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_node_geocoder.rollup.js'] =","            local.assetsDict['/assets.npmtest_node_geocoder.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_node_geocoder.__dirname + '/lib.npmtest_node_geocoder.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":64}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}}},"branchMap":{},"code":["'use strict';","","var GeocoderFactory = require('./lib/geocoderfactory.js');","","var Exports = GeocoderFactory.getGeocoder.bind(GeocoderFactory);","","module.exports =  Exports;",""],"l":{"3":1,"5":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoderfactory.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoderfactory.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":50}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":16},"end":{"line":54,"column":55}}},"3":{"name":"(anonymous_3)","line":114,"loc":{"start":{"line":114,"column":17},"end":{"line":114,"column":48}}},"4":{"name":"(anonymous_4)","line":134,"loc":{"start":{"line":134,"column":15},"end":{"line":134,"column":61}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":64}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":67}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":85}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":75}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":69}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":73}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":65}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":65}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":83}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},"20":{"start":{"line":24,"column":0},"end":{"line":24,"column":67}},"21":{"start":{"line":25,"column":0},"end":{"line":25,"column":65}},"22":{"start":{"line":26,"column":0},"end":{"line":26,"column":77}},"23":{"start":{"line":31,"column":0},"end":{"line":177,"column":2}},"24":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"25":{"start":{"line":40,"column":6},"end":{"line":40,"column":44}},"26":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"27":{"start":{"line":43,"column":6},"end":{"line":43,"column":45}},"28":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"29":{"start":{"line":46,"column":6},"end":{"line":46,"column":47}},"30":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"31":{"start":{"line":56,"column":6},"end":{"line":56,"column":215}},"32":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"33":{"start":{"line":59,"column":6},"end":{"line":59,"column":191}},"34":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"35":{"start":{"line":62,"column":6},"end":{"line":62,"column":105}},"36":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"37":{"start":{"line":65,"column":6},"end":{"line":65,"column":44}},"38":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"39":{"start":{"line":68,"column":6},"end":{"line":68,"column":73}},"40":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"41":{"start":{"line":71,"column":6},"end":{"line":71,"column":76}},"42":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"43":{"start":{"line":74,"column":6},"end":{"line":74,"column":59}},"44":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"45":{"start":{"line":77,"column":6},"end":{"line":77,"column":57}},"46":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"47":{"start":{"line":80,"column":6},"end":{"line":80,"column":61}},"48":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"49":{"start":{"line":83,"column":6},"end":{"line":83,"column":69}},"50":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"51":{"start":{"line":86,"column":6},"end":{"line":86,"column":57}},"52":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"53":{"start":{"line":89,"column":6},"end":{"line":89,"column":64}},"54":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"55":{"start":{"line":92,"column":6},"end":{"line":92,"column":102}},"56":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"57":{"start":{"line":95,"column":6},"end":{"line":95,"column":65}},"58":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"59":{"start":{"line":98,"column":6},"end":{"line":98,"column":73}},"60":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"61":{"start":{"line":101,"column":6},"end":{"line":101,"column":64}},"62":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"63":{"start":{"line":104,"column":6},"end":{"line":104,"column":49}},"64":{"start":{"line":107,"column":4},"end":{"line":107,"column":71}},"65":{"start":{"line":115,"column":4},"end":{"line":119,"column":5}},"66":{"start":{"line":116,"column":6},"end":{"line":116,"column":64}},"67":{"start":{"line":118,"column":6},"end":{"line":118,"column":32}},"68":{"start":{"line":121,"column":4},"end":{"line":125,"column":5}},"69":{"start":{"line":122,"column":6},"end":{"line":122,"column":70}},"70":{"start":{"line":124,"column":6},"end":{"line":124,"column":57}},"71":{"start":{"line":135,"column":4},"end":{"line":139,"column":5}},"72":{"start":{"line":136,"column":6},"end":{"line":136,"column":30}},"73":{"start":{"line":137,"column":6},"end":{"line":137,"column":29}},"74":{"start":{"line":138,"column":6},"end":{"line":138,"column":25}},"75":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"76":{"start":{"line":142,"column":6},"end":{"line":142,"column":17}},"77":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"78":{"start":{"line":146,"column":6},"end":{"line":146,"column":38}},"79":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"80":{"start":{"line":150,"column":6},"end":{"line":150,"column":39}},"81":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"82":{"start":{"line":154,"column":6},"end":{"line":154,"column":28}},"83":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"84":{"start":{"line":158,"column":6},"end":{"line":158,"column":33}},"85":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"86":{"start":{"line":162,"column":6},"end":{"line":162,"column":61}},"87":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"88":{"start":{"line":166,"column":6},"end":{"line":166,"column":79}},"89":{"start":{"line":169,"column":4},"end":{"line":169,"column":36}},"90":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"91":{"start":{"line":172,"column":6},"end":{"line":172,"column":55}},"92":{"start":{"line":175,"column":4},"end":{"line":175,"column":52}},"93":{"start":{"line":179,"column":0},"end":{"line":179,"column":33}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"9":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"10":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"13":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"14":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"15":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"16":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"17":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"19":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"20":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"21":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"22":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"23":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"24":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"25":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"26":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"27":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"28":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"29":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"30":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"31":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]}},"code":["'use strict';","","var Helper = require('./helper.js');","var Geocoder = require('./geocoder.js');","","var HttpAdapter = require('./httpadapter/httpadapter.js');","var HttpsAdapter = require('./httpadapter/httpsadapter.js');","var RequestAdapter = require('./httpadapter/requestadapter.js');","","var GoogleGeocoder = require('./geocoder/googlegeocoder.js');","var HereGeocoder = require('./geocoder/heregeocoder.js');","var AGOLGeocoder = require('./geocoder/agolgeocoder.js');","var FreegeoipGeocoder = require('./geocoder/freegeoipgeocoder.js');","var DataScienceToolkitGeocoder = require('./geocoder/datasciencetoolkitgeocoder.js');","var OpenStreetMapGeocoder = require('./geocoder/openstreetmapgeocoder.js');","var LocationIQGeocoder = require('./geocoder/locationiqgeocoder.js');","var MapQuestGeocoder = require('./geocoder/mapquestgeocoder.js');","var OpenMapQuestGeocoder = require('./geocoder/openmapquestgeocoder.js');","var YandexGeocoder = require('./geocoder/yandexgeocoder.js');","var GeocodioGeocoder = require('./geocoder/geocodiogeocoder.js');","var OpenCageGeocoder = require('./geocoder/opencagegeocoder.js');","var NominatimMapquestGeocoder = require('./geocoder/nominatimmapquestgeocoder.js');","var TomTomGeocoder = require('./geocoder/tomtomgeocoder.js');","var SmartyStreets = require('./geocoder/smartystreetsgeocoder.js');","var TeleportGeocoder = require('./geocoder/teleportgeocoder.js');","var OpendataFranceGeocoder = require('./geocoder/opendatafrancegeocoder.js');","","/**","* Geocoder Facotry","*/","var GeocoderFactory = {","","  /**","  * Return an http adapter by name","  * @param  <string> adapterName adapter name","  * @return <object>","  */","  _getHttpAdapter: function(adapterName, options) {","    if (adapterName === 'http') {","      return new HttpAdapter(null, options);","    }","    if (adapterName === 'https') {","      return new HttpsAdapter(null, options);","    }","    if (adapterName === 'request') {","      return new RequestAdapter(null, options);","    }","  },","  /**","  * Return a geocoder adapter by name","  * @param  <string> adapterName adapter name","  * @return <object>","  */","  _getGeocoder: function(geocoderName, adapter, extra) {","    if (geocoderName === 'google') {","      return new GoogleGeocoder(adapter, {clientId: extra.clientId, apiKey: extra.apiKey, language: extra.language, region: extra.region, excludePartialMatches: extra.excludePartialMatches, channel: extra.channel});","    }","    if (geocoderName === 'here') {","      return new HereGeocoder(adapter, {appId: extra.appId, appCode: extra.appCode, language: extra.language, politicalView: extra.politicalView, country: extra.country, state: extra.state});","    }","    if (geocoderName === 'agol') {","      return new AGOLGeocoder(adapter, {client_id: extra.client_id, client_secret: extra.client_secret});","    }","    if (geocoderName === 'freegeoip') {","      return new FreegeoipGeocoder(adapter);","    }","    if (geocoderName === 'datasciencetoolkit') {","      return new DataScienceToolkitGeocoder(adapter, {host: extra.host});","    }","    if (geocoderName === 'openstreetmap') {","      return new OpenStreetMapGeocoder(adapter, {language: extra.language});","    }","    if (geocoderName === 'locationiq') {","      return new LocationIQGeocoder(adapter, extra.apiKey);","    }","    if (geocoderName === 'mapquest') {","      return new MapQuestGeocoder(adapter, extra.apiKey);","    }","    if (geocoderName === 'openmapquest') {","      return new OpenMapQuestGeocoder(adapter, extra.apiKey);","    }","    if (geocoderName === 'yandex') {","      return new YandexGeocoder(adapter, {language: extra.language});","    }","    if (geocoderName === 'geocodio') {","      return new GeocodioGeocoder(adapter, extra.apiKey);","    }","    if (geocoderName === 'opencage') {","      return new OpenCageGeocoder(adapter, extra.apiKey, extra);","    }","    if (geocoderName === 'nominatimmapquest') {","      return new NominatimMapquestGeocoder(adapter, {language: extra.language, apiKey: extra.apiKey});","    }","    if (geocoderName === 'tomtom') {","      return new TomTomGeocoder(adapter, {apiKey: extra.apiKey});","    }","    if (geocoderName === 'smartystreets') {","      return new SmartyStreets(adapter, extra.auth_id, extra.auth_token);","    }","    if (geocoderName === 'teleport') {","      return new TeleportGeocoder(adapter, extra.apiKey, extra);","    }","    if (geocoderName === 'opendatafrance') {","      return new OpendataFranceGeocoder(adapter);","    }","","    throw new Error('No geocoder provider find for : ' + geocoderName);","  },","  /**","  * Return an formatter adapter by name","  * @param  <string> adapterName adapter name","  * @return <object>","  */","  _getFormatter: function(formatterName, extra) {","    if (formatterName === 'gpx') {","      var GpxFormatter = require('./formatter/gpxformatter.js');","","      return new GpxFormatter();","    }","","    if (formatterName === 'string') {","      var StringFormatter = require('./formatter/stringformatter.js');","","      return new StringFormatter(extra.formatterPattern);","    }","  },","  /**","  * Return a geocoder","  * @param  <string|object> geocoderAdapter Geocoder adapter name or adapter object","  * @param  <string|object> httpAdapter     Http adapter name or adapter object","  * @param  <array>         extra           Extra parameters array","  * @return <object>","  */","  getGeocoder: function(geocoderAdapter, httpAdapter, extra) {","    if (typeof geocoderAdapter === 'object') {","      extra = geocoderAdapter;","      geocoderAdapter = null;","      httpAdapter = null;","    }","","    if (!extra) {","      extra = {};","    }","","    if (extra.httpAdapter) {","      httpAdapter = extra.httpAdapter;","    }","","    if (extra.provider) {","      geocoderAdapter = extra.provider;","    }","","    if (!httpAdapter) {","      httpAdapter = 'https';","    }","","    if (!geocoderAdapter) {","      geocoderAdapter = 'google';","    }","","    if (Helper.isString(httpAdapter)) {","      httpAdapter = this._getHttpAdapter(httpAdapter, extra);","    }","","    if (Helper.isString(geocoderAdapter)) {","      geocoderAdapter = this._getGeocoder(geocoderAdapter, httpAdapter, extra);","    }","","    var formatter = extra.formatter;","","    if (Helper.isString(formatter)) {","      formatter = this._getFormatter(formatter, extra);","    }","","    return new Geocoder(geocoderAdapter, formatter);","  }","};","","module.exports = GeocoderFactory;",""],"l":{"3":1,"4":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"31":1,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"55":0,"56":0,"58":0,"59":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"107":0,"115":0,"116":0,"118":0,"121":0,"122":0,"124":0,"135":0,"136":0,"137":0,"138":0,"141":0,"142":0,"145":0,"146":0,"149":0,"150":0,"153":0,"154":0,"157":0,"158":0,"161":0,"162":0,"165":0,"166":0,"169":0,"171":0,"172":0,"175":0,"179":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/helper.js","s":{"1":1,"2":0,"3":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":30}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":68}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":38}},{"start":{"line":8,"column":42},"end":{"line":8,"column":67}}]}},"code":["'use strict';","","/**","* Helper object","*/","var Helper = {","  isString: function(testVar) {","    return typeof testVar === 'string' || testVar instanceof String;","  }","};","","module.exports = Helper;",""],"l":{"6":1,"8":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":46}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":56}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":21}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":35},"end":{"line":24,"column":54}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":10},"end":{"line":28,"column":25}}},"6":{"name":"(anonymous_6)","line":31,"loc":{"start":{"line":31,"column":10},"end":{"line":31,"column":25}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":55}}},"8":{"name":"(anonymous_8)","line":45,"loc":{"start":{"line":45,"column":10},"end":{"line":45,"column":21}}},"9":{"name":"(anonymous_9)","line":46,"loc":{"start":{"line":46,"column":35},"end":{"line":46,"column":54}}},"10":{"name":"(anonymous_10)","line":50,"loc":{"start":{"line":50,"column":10},"end":{"line":50,"column":25}}},"11":{"name":"(anonymous_11)","line":63,"loc":{"start":{"line":63,"column":34},"end":{"line":63,"column":61}}},"12":{"name":"(anonymous_12)","line":66,"loc":{"start":{"line":66,"column":9},"end":{"line":66,"column":25}}},"13":{"name":"(anonymous_13)","line":68,"loc":{"start":{"line":68,"column":14},"end":{"line":68,"column":30}}},"14":{"name":"(anonymous_14)","line":74,"loc":{"start":{"line":74,"column":15},"end":{"line":74,"column":31}}},"15":{"name":"(anonymous_15)","line":84,"loc":{"start":{"line":84,"column":29},"end":{"line":84,"column":52}}},"16":{"name":"(anonymous_16)","line":90,"loc":{"start":{"line":90,"column":23},"end":{"line":90,"column":49}}},"17":{"name":"(anonymous_17)","line":100,"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":45}}},"18":{"name":"(anonymous_18)","line":104,"loc":{"start":{"line":104,"column":10},"end":{"line":104,"column":21}}},"19":{"name":"(anonymous_19)","line":111,"loc":{"start":{"line":111,"column":22},"end":{"line":111,"column":39}}},"20":{"name":"(anonymous_20)","line":122,"loc":{"start":{"line":122,"column":10},"end":{"line":122,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":10,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":28}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"5":{"start":{"line":20,"column":0},"end":{"line":35,"column":2}},"6":{"start":{"line":21,"column":2},"end":{"line":34,"column":26}},"7":{"start":{"line":24,"column":6},"end":{"line":26,"column":20}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":48}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":39}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":32}},"11":{"start":{"line":42,"column":0},"end":{"line":54,"column":2}},"12":{"start":{"line":43,"column":2},"end":{"line":53,"column":26}},"13":{"start":{"line":46,"column":6},"end":{"line":48,"column":20}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":48}},"15":{"start":{"line":51,"column":6},"end":{"line":51,"column":32}},"16":{"start":{"line":63,"column":0},"end":{"line":82,"column":2}},"17":{"start":{"line":64,"column":2},"end":{"line":81,"column":26}},"18":{"start":{"line":67,"column":6},"end":{"line":79,"column":11}},"19":{"start":{"line":69,"column":10},"end":{"line":72,"column":12}},"20":{"start":{"line":75,"column":10},"end":{"line":78,"column":12}},"21":{"start":{"line":84,"column":0},"end":{"line":98,"column":2}},"22":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"23":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"24":{"start":{"line":89,"column":2},"end":{"line":95,"column":3}},"25":{"start":{"line":90,"column":4},"end":{"line":94,"column":7}},"26":{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},"27":{"start":{"line":92,"column":8},"end":{"line":92,"column":71}},"28":{"start":{"line":97,"column":2},"end":{"line":97,"column":14}},"29":{"start":{"line":100,"column":0},"end":{"line":130,"column":2}},"30":{"start":{"line":101,"column":2},"end":{"line":101,"column":19}},"31":{"start":{"line":102,"column":2},"end":{"line":129,"column":7}},"32":{"start":{"line":105,"column":6},"end":{"line":107,"column":7}},"33":{"start":{"line":106,"column":8},"end":{"line":106,"column":20}},"34":{"start":{"line":109,"column":6},"end":{"line":109,"column":26}},"35":{"start":{"line":111,"column":6},"end":{"line":115,"column":9}},"36":{"start":{"line":112,"column":8},"end":{"line":112,"column":47}},"37":{"start":{"line":114,"column":8},"end":{"line":114,"column":22}},"38":{"start":{"line":117,"column":6},"end":{"line":117,"column":22}},"39":{"start":{"line":118,"column":6},"end":{"line":118,"column":95}},"40":{"start":{"line":120,"column":6},"end":{"line":120,"column":18}},"41":{"start":{"line":123,"column":6},"end":{"line":123,"column":23}},"42":{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},"43":{"start":{"line":125,"column":8},"end":{"line":125,"column":46}},"44":{"start":{"line":128,"column":6},"end":{"line":128,"column":19}},"45":{"start":{"line":132,"column":0},"end":{"line":132,"column":26}}},"branchMap":{"1":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"2":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":11}},{"start":{"line":85,"column":15},"end":{"line":85,"column":27}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":31}},{"start":{"line":91,"column":35},"end":{"line":91,"column":67}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"7":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"8":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":10},"end":{"line":124,"column":25}},{"start":{"line":124,"column":29},"end":{"line":124,"column":60}}]}},"code":["'use strict';","","var BPromise = require('bluebird');","","/**","* Constructor","* @param <object> geocoder  Geocoder Adapter","* @param <object> formatter Formatter adapter or null","*/","var Geocoder = function (geocoder, formatter) {","  this._geocoder = geocoder;","  this._formatter = formatter;","};","","/**","* Geocode a value (address or ip)","* @param <string>   value    Value to geocoder (address or IP)","* @param <function> callback Callback method","*/","Geocoder.prototype.geocode = function (value, callback) {","  return BPromise.resolve()","    .bind(this)","    .then(function() {","      return BPromise.fromCallback(function(callback) {","        this._geocoder.geocode(value, callback);","      }.bind(this));","    })","    .then(function(data) {","      return this._filter(value, data);","    })","    .then(function(data) {","      return this._format(data);","    })","    .asCallback(callback);","};","","/**","* Reverse geocoding","* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude","* @param {function} callback Callback method","*/","Geocoder.prototype.reverse = function(query, callback) {","  return BPromise.resolve()","    .bind(this)","    .then(function() {","      return BPromise.fromCallback(function(callback) {","        this._geocoder.reverse(query, callback);","      }.bind(this));","    })","    .then(function(data) {","      return this._format(data);","    })","    .asCallback(callback);","};","","/**","* Batch geocode","* @param <array>    values    array of Values to geocode (address or IP)","* @param <function> callback","*","* @return promise","*/","Geocoder.prototype.batchGeocode = function(values, callback) {","  return BPromise.resolve(values)","    .bind(this)","    .map(function(value) {","      return this.geocode(value)","        .then(function(value) {","          return {","            error: null,","            value: value","          };","        })","        .catch(function(error) {","          return {","            error: error,","            value: null","          };","        });","    })","    .asCallback(callback);","};","","Geocoder.prototype._filter = function (value, data) {","  if (!data || !data.length) {","    return data;","  }","","  if (value.minConfidence) {","    data = data.filter(function(geocodedAddress) {","      if (geocodedAddress.extra && geocodedAddress.extra.confidence) {","        return geocodedAddress.extra.confidence >= value.minConfidence;","      }","    });","  }","","  return data;","};","","Geocoder.prototype._format = function (data) {","  var _this = this;","  return BPromise.resolve()","    .bind(this)","    .then(function() {","      if (!data) {","        return data;","      }","","      var _raw = data.raw;","","      data = data.map(function(result) {","        result.provider = _this._geocoder.name;","","        return result;","      });","","      data.raw = _raw;","      Object.defineProperty(data,'raw',{configurable:false, enumerable:false, writable:false});","","      return data;","    })","    .then(function(data) {","      var _data = data;","      if (this._formatter && this._formatter !== 'undefined') {","        _data = this._formatter.format(_data);","      }","","      return _data;","    });","};","","module.exports = Geocoder;",""],"l":{"3":1,"10":1,"11":0,"12":0,"20":1,"21":0,"24":0,"25":0,"29":0,"32":0,"42":1,"43":0,"46":0,"47":0,"51":0,"63":1,"64":0,"67":0,"69":0,"75":0,"84":1,"85":0,"86":0,"89":0,"90":0,"91":0,"92":0,"97":0,"100":1,"101":0,"102":0,"105":0,"106":0,"109":0,"111":0,"112":0,"114":0,"117":0,"118":0,"120":0,"123":0,"124":0,"125":0,"128":0,"132":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/httpadapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/httpadapter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":18},"end":{"line":11,"column":42}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":28},"end":{"line":27,"column":60}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":43},"end":{"line":48,"column":62}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":40}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":23},"end":{"line":56,"column":34}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":16},"end":{"line":74,"column":30}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":24},"end":{"line":83,"column":35}}},"8":{"name":"(anonymous_8)","line":94,"loc":{"start":{"line":94,"column":38},"end":{"line":94,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":11,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":28}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},"9":{"start":{"line":27,"column":0},"end":{"line":92,"column":2}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":38}},"11":{"start":{"line":30,"column":2},"end":{"line":36,"column":4}},"12":{"start":{"line":38,"column":2},"end":{"line":46,"column":3}},"13":{"start":{"line":39,"column":4},"end":{"line":45,"column":5}},"14":{"start":{"line":40,"column":6},"end":{"line":40,"column":30}},"15":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":17}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":21}},"18":{"start":{"line":48,"column":2},"end":{"line":68,"column":5}},"19":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"21":{"start":{"line":51,"column":4},"end":{"line":53,"column":7}},"22":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}},"23":{"start":{"line":56,"column":4},"end":{"line":67,"column":7}},"24":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":91}},"26":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"27":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":29}},"29":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"30":{"start":{"line":71,"column":4},"end":{"line":71,"column":40}},"31":{"start":{"line":74,"column":2},"end":{"line":79,"column":4}},"32":{"start":{"line":75,"column":4},"end":{"line":77,"column":7}},"33":{"start":{"line":78,"column":4},"end":{"line":78,"column":26}},"34":{"start":{"line":81,"column":2},"end":{"line":81,"column":31}},"35":{"start":{"line":83,"column":2},"end":{"line":89,"column":5}},"36":{"start":{"line":84,"column":4},"end":{"line":88,"column":8}},"37":{"start":{"line":91,"column":2},"end":{"line":91,"column":16}},"38":{"start":{"line":94,"column":0},"end":{"line":96,"column":2}},"39":{"start":{"line":95,"column":2},"end":{"line":95,"column":15}},"40":{"start":{"line":98,"column":0},"end":{"line":98,"column":29}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":11}},{"start":{"line":12,"column":15},"end":{"line":12,"column":35}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":10},"end":{"line":61,"column":35}},{"start":{"line":61,"column":39},"end":{"line":61,"column":83}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"9":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":43},"end":{"line":75,"column":46}},{"start":{"line":75,"column":49},"end":{"line":77,"column":6}}]}},"code":["'use strict';","","var HttpError = require('../error/httperror.js');","var querystring = require('querystring');","","/**","* HttpAdapter","* @param <object>   http      an optional http instance to use","* @param <object>   options   additional options to set on the request","*/","var HttpAdapter = function(http, options) {","  if (!http || http === 'undefined') {","    http = require('http');","  }","","  this.url = require('url');","  this.http = http;","  this.options = options;","};","","/**","* Geocode","* @param <string>   url      Webservice url","* @param <array>    params   array of query string parameters","* @param <function> callback Callback method","*/","HttpAdapter.prototype.get = function(url, params, callback) {","","  var urlParsed = this.url.parse(url);","  var options = {","    host: urlParsed.host,","    path: urlParsed.path + '?' + querystring.stringify(params),","    headers: {","      'user-agent': 'Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0'","    }","  };","","  if (this.options) {","    for (var k in this.options) {","      var v = this.options[k];","      if (!v) {","        continue;","      }","      options[k] = v;","    }","  }","","  var request = this.http.request(options, function(response) {","    var str = '';","    var contentType = response.headers['content-type'];","    response.on('data', function(chunk) {","      str += chunk;","    });","","    //the whole response has been recieved, so we just print it out here","    response.on('end', function() {","      if (response.statusCode !== 200) {","        return callback(new Error('Response status code is ' + response.statusCode), null);","      }","","      if (contentType !== undefined && contentType.indexOf('application/json') >= 0) {","        callback(false, JSON.parse(str));","      } else {","        callback(false, str);","      }","","    });","  });","","  if(typeof options.timeout !== 'undefined') {","    request.setTimeout(options.timeout);","  }","","  var onError = function(err) {","    var error = err instanceof HttpError ? err : new HttpError(err.message, {","      code: err.code","    });","    callback(error, null);","  };","","  request.on('error', onError);","","  request.on('timeout', function() {","    onError(new HttpError('connect ETIMEDOUT', {","      code: 'ETIMEDOUT',","      errno: 'ETIMEDOUT',","      syscall: 'connect'","    }));","  });","","  request.end();","};","","HttpAdapter.prototype.supportsHttps = function() {","  return false;","};","","module.exports = HttpAdapter;",""],"l":{"3":1,"4":1,"11":1,"12":0,"13":0,"16":0,"17":0,"18":0,"27":1,"29":0,"30":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"48":0,"49":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"61":0,"62":0,"64":0,"70":0,"71":0,"74":0,"75":0,"78":0,"81":0,"83":0,"84":0,"91":0,"94":1,"95":0,"98":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/error/httperror.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/error/httperror.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":21}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":52}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":28}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":27}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"8":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"9":{"start":{"line":13,"column":6},"end":{"line":13,"column":38}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":27}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":16},"end":{"line":13,"column":23}},{"start":{"line":13,"column":27},"end":{"line":13,"column":37}}]}},"code":["var util = require('util');","","var HttpError = function(message, options) {","    Error.call(this);","    Error.captureStackTrace(this, this.constructor);","","    this.name = 'HttpError';","    this.message = message;","","    options = options || {};","","    for(var k in options) {","      this[k] = this[k] || options[k];","    }","};","","util.inherits(HttpError, Error);","","module.exports = HttpError;",""],"l":{"1":1,"3":1,"4":0,"5":0,"7":0,"8":0,"10":0,"12":0,"13":0,"17":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/httpsadapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/httpsadapter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":42}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"4":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":28}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":19}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"9":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":14}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":11}},{"start":{"line":10,"column":15},"end":{"line":10,"column":35}}]}},"code":["var HttpAdapter = require('./httpadapter.js');","var util = require('util');","","/**","* HttpsAdapter","* @param <object>   http      an optional http instance to use","* @param <object>   options   additional options to set on the request","*/","var HttpsAdapter = function(http,options) {","  if (!http || http === 'undefined') {","    http = require('https');","  }","","  this.url = require('url');","  this.http = http;","  this.options = options;","};","","HttpAdapter.prototype.supportsHttps = function() {","  return true;","};","","util.inherits(HttpsAdapter, HttpAdapter);","","module.exports = HttpsAdapter;",""],"l":{"1":1,"2":1,"9":1,"10":0,"11":0,"14":0,"15":0,"16":0,"19":1,"20":0,"23":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/requestadapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/httpadapter/requestadapter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":48}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":41},"end":{"line":15,"column":52}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":63}}},"4":{"name":"handleResponse","line":46,"loc":{"start":{"line":46,"column":31},"end":{"line":46,"column":65}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":9},"end":{"line":49,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"5":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}},"7":{"start":{"line":25,"column":0},"end":{"line":56,"column":2}},"8":{"start":{"line":26,"column":2},"end":{"line":34,"column":4}},"9":{"start":{"line":36,"column":2},"end":{"line":44,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":38,"column":30}},"12":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":17}},"14":{"start":{"line":42,"column":6},"end":{"line":42,"column":21}},"15":{"start":{"line":46,"column":2},"end":{"line":55,"column":24}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"18":{"start":{"line":51,"column":4},"end":{"line":53,"column":7}},"19":{"start":{"line":58,"column":0},"end":{"line":58,"column":32}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":31},"end":{"line":50,"column":42}},{"start":{"line":50,"column":45},"end":{"line":50,"column":50}}]}},"code":["'use strict';","","var HttpError = require('../error/httperror.js');","var request = require('request-promise');","","/**","* RequestAdapter","* @param <object>   http      an optional http instance to use","* @param <object>   options   additional options to set on the request","*/","var RequestAdapter = function(request, options) {","  this.options = options;","};","","RequestAdapter.prototype.supportsHttps = function() {","  return true;","};","","/**","* get","* @param <string>   uri      Webservice url","* @param <array>    params   array of query string parameters","* @param <function> callback Callback method","*/","RequestAdapter.prototype.get = function(url, params, callback) {","  var options = {","    uri: url,","    qs: params,","    headers: {","      'user-agent': 'Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0'","    },","    resolveWithFullResponse: true,","    json: true","  };","","  if (this.options) {","    for (var k in this.options) {","      var v = this.options[k];","      if (!v) {","        continue;","      }","      options[k] = v;","    }","  }","","  return request(options).then(function handleResponse(response) {","    return response.body;","  })","  .catch(function(error) {","    var _error = error.cause ? error.cause : error;","    throw new HttpError(_error.message, {","      code: _error.code","    });","  })","  .asCallback(callback);","};","","module.exports = RequestAdapter;",""],"l":{"3":1,"4":1,"11":1,"12":0,"15":1,"16":0,"25":1,"26":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"46":0,"47":0,"50":0,"51":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"GoogleGeocoder","line":13,"loc":{"start":{"line":13,"column":21},"end":{"line":13,"column":67}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":36},"end":{"line":37,"column":63}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":47},"end":{"line":76,"column":70}}},"4":{"name":"(anonymous_4)","line":111,"loc":{"start":{"line":111,"column":47},"end":{"line":111,"column":59}}},"5":{"name":"(anonymous_5)","line":142,"loc":{"start":{"line":142,"column":42},"end":{"line":142,"column":70}}},"6":{"name":"(anonymous_6)","line":161,"loc":{"start":{"line":161,"column":41},"end":{"line":161,"column":59}}},"7":{"name":"(anonymous_7)","line":260,"loc":{"start":{"line":260,"column":36},"end":{"line":260,"column":63}}},"8":{"name":"(anonymous_8)","line":282,"loc":{"start":{"line":282,"column":47},"end":{"line":282,"column":70}}},"9":{"name":"(anonymous_9)","line":304,"loc":{"start":{"line":304,"column":47},"end":{"line":304,"column":63}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"5":{"start":{"line":13,"column":0},"end":{"line":25,"column":2}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":98}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":57}},"8":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":62}},"10":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":89}},"14":{"start":{"line":37,"column":0},"end":{"line":109,"column":2}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}},"17":{"start":{"line":42,"column":2},"end":{"line":62,"column":3}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"19":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"20":{"start":{"line":46,"column":6},"end":{"line":46,"column":46}},"21":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"22":{"start":{"line":50,"column":6},"end":{"line":52,"column":7}},"23":{"start":{"line":51,"column":8},"end":{"line":51,"column":26}},"24":{"start":{"line":53,"column":6},"end":{"line":53,"column":51}},"25":{"start":{"line":56,"column":4},"end":{"line":56,"column":61}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":61}},"27":{"start":{"line":58,"column":9},"end":{"line":62,"column":3}},"28":{"start":{"line":59,"column":4},"end":{"line":59,"column":42}},"29":{"start":{"line":61,"column":4},"end":{"line":61,"column":53}},"30":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"31":{"start":{"line":65,"column":4},"end":{"line":65,"column":37}},"32":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"34":{"start":{"line":72,"column":2},"end":{"line":72,"column":59}},"35":{"start":{"line":73,"column":2},"end":{"line":73,"column":38}},"36":{"start":{"line":75,"column":2},"end":{"line":75,"column":46}},"37":{"start":{"line":76,"column":2},"end":{"line":107,"column":5}},"38":{"start":{"line":77,"column":4},"end":{"line":105,"column":5}},"39":{"start":{"line":78,"column":6},"end":{"line":78,"column":27}},"40":{"start":{"line":80,"column":6},"end":{"line":80,"column":23}},"41":{"start":{"line":83,"column":6},"end":{"line":86,"column":7}},"42":{"start":{"line":84,"column":8},"end":{"line":84,"column":29}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":40}},"44":{"start":{"line":88,"column":6},"end":{"line":90,"column":7}},"45":{"start":{"line":89,"column":8},"end":{"line":89,"column":145}},"46":{"start":{"line":92,"column":6},"end":{"line":101,"column":7}},"47":{"start":{"line":94,"column":8},"end":{"line":94,"column":46}},"48":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"49":{"start":{"line":97,"column":10},"end":{"line":97,"column":19}},"50":{"start":{"line":100,"column":8},"end":{"line":100,"column":57}},"51":{"start":{"line":103,"column":6},"end":{"line":103,"column":27}},"52":{"start":{"line":104,"column":6},"end":{"line":104,"column":31}},"53":{"start":{"line":111,"column":0},"end":{"line":140,"column":2}},"54":{"start":{"line":112,"column":2},"end":{"line":114,"column":4}},"55":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"56":{"start":{"line":117,"column":4},"end":{"line":117,"column":44}},"57":{"start":{"line":120,"column":2},"end":{"line":122,"column":3}},"58":{"start":{"line":121,"column":4},"end":{"line":121,"column":40}},"59":{"start":{"line":124,"column":2},"end":{"line":128,"column":3}},"60":{"start":{"line":125,"column":4},"end":{"line":125,"column":42}},"61":{"start":{"line":126,"column":9},"end":{"line":128,"column":3}},"62":{"start":{"line":127,"column":4},"end":{"line":127,"column":37}},"63":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"64":{"start":{"line":131,"column":4},"end":{"line":131,"column":42}},"65":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"66":{"start":{"line":135,"column":4},"end":{"line":135,"column":40}},"67":{"start":{"line":138,"column":2},"end":{"line":138,"column":16}},"68":{"start":{"line":142,"column":0},"end":{"line":159,"column":2}},"69":{"start":{"line":144,"column":2},"end":{"line":156,"column":3}},"70":{"start":{"line":145,"column":4},"end":{"line":145,"column":38}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":69}},"72":{"start":{"line":148,"column":4},"end":{"line":148,"column":99}},"73":{"start":{"line":149,"column":4},"end":{"line":149,"column":53}},"74":{"start":{"line":150,"column":4},"end":{"line":150,"column":33}},"75":{"start":{"line":151,"column":4},"end":{"line":151,"column":42}},"76":{"start":{"line":153,"column":4},"end":{"line":153,"column":66}},"77":{"start":{"line":155,"column":4},"end":{"line":155,"column":33}},"78":{"start":{"line":158,"column":2},"end":{"line":158,"column":16}},"79":{"start":{"line":161,"column":0},"end":{"line":253,"column":2}},"80":{"start":{"line":163,"column":2},"end":{"line":168,"column":4}},"81":{"start":{"line":170,"column":2},"end":{"line":184,"column":4}},"82":{"start":{"line":186,"column":2},"end":{"line":251,"column":3}},"83":{"start":{"line":187,"column":4},"end":{"line":187,"column":60}},"84":{"start":{"line":188,"column":4},"end":{"line":250,"column":5}},"85":{"start":{"line":191,"column":8},"end":{"line":191,"column":70}},"86":{"start":{"line":192,"column":8},"end":{"line":192,"column":75}},"87":{"start":{"line":193,"column":8},"end":{"line":193,"column":14}},"88":{"start":{"line":196,"column":8},"end":{"line":196,"column":94}},"89":{"start":{"line":197,"column":8},"end":{"line":197,"column":96}},"90":{"start":{"line":198,"column":8},"end":{"line":198,"column":14}},"91":{"start":{"line":201,"column":8},"end":{"line":201,"column":94}},"92":{"start":{"line":202,"column":8},"end":{"line":202,"column":96}},"93":{"start":{"line":203,"column":8},"end":{"line":203,"column":14}},"94":{"start":{"line":206,"column":8},"end":{"line":206,"column":94}},"95":{"start":{"line":207,"column":8},"end":{"line":207,"column":96}},"96":{"start":{"line":208,"column":8},"end":{"line":208,"column":14}},"97":{"start":{"line":211,"column":8},"end":{"line":211,"column":94}},"98":{"start":{"line":212,"column":8},"end":{"line":212,"column":96}},"99":{"start":{"line":213,"column":8},"end":{"line":213,"column":14}},"100":{"start":{"line":216,"column":8},"end":{"line":216,"column":94}},"101":{"start":{"line":217,"column":8},"end":{"line":217,"column":96}},"102":{"start":{"line":218,"column":8},"end":{"line":218,"column":14}},"103":{"start":{"line":221,"column":8},"end":{"line":221,"column":67}},"104":{"start":{"line":222,"column":8},"end":{"line":222,"column":14}},"105":{"start":{"line":225,"column":8},"end":{"line":225,"column":70}},"106":{"start":{"line":226,"column":8},"end":{"line":226,"column":14}},"107":{"start":{"line":228,"column":8},"end":{"line":228,"column":73}},"108":{"start":{"line":229,"column":8},"end":{"line":229,"column":14}},"109":{"start":{"line":231,"column":8},"end":{"line":231,"column":75}},"110":{"start":{"line":232,"column":8},"end":{"line":232,"column":14}},"111":{"start":{"line":234,"column":8},"end":{"line":234,"column":76}},"112":{"start":{"line":235,"column":8},"end":{"line":235,"column":14}},"113":{"start":{"line":237,"column":8},"end":{"line":237,"column":79}},"114":{"start":{"line":238,"column":8},"end":{"line":238,"column":14}},"115":{"start":{"line":240,"column":8},"end":{"line":240,"column":82}},"116":{"start":{"line":241,"column":8},"end":{"line":241,"column":14}},"117":{"start":{"line":246,"column":8},"end":{"line":248,"column":9}},"118":{"start":{"line":247,"column":10},"end":{"line":247,"column":83}},"119":{"start":{"line":249,"column":8},"end":{"line":249,"column":14}},"120":{"start":{"line":252,"column":2},"end":{"line":252,"column":22}},"121":{"start":{"line":260,"column":0},"end":{"line":302,"column":2}},"122":{"start":{"line":261,"column":2},"end":{"line":261,"column":22}},"123":{"start":{"line":262,"column":2},"end":{"line":262,"column":22}},"124":{"start":{"line":264,"column":2},"end":{"line":264,"column":19}},"125":{"start":{"line":265,"column":2},"end":{"line":265,"column":42}},"126":{"start":{"line":267,"column":2},"end":{"line":267,"column":34}},"127":{"start":{"line":269,"column":2},"end":{"line":271,"column":3}},"128":{"start":{"line":270,"column":4},"end":{"line":270,"column":37}},"129":{"start":{"line":273,"column":2},"end":{"line":275,"column":3}},"130":{"start":{"line":274,"column":4},"end":{"line":274,"column":43}},"131":{"start":{"line":277,"column":2},"end":{"line":279,"column":3}},"132":{"start":{"line":278,"column":4},"end":{"line":278,"column":47}},"133":{"start":{"line":281,"column":2},"end":{"line":281,"column":46}},"134":{"start":{"line":282,"column":2},"end":{"line":301,"column":5}},"135":{"start":{"line":283,"column":4},"end":{"line":300,"column":5}},"136":{"start":{"line":284,"column":6},"end":{"line":284,"column":27}},"137":{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},"138":{"start":{"line":289,"column":8},"end":{"line":289,"column":145}},"139":{"start":{"line":292,"column":6},"end":{"line":292,"column":23}},"140":{"start":{"line":294,"column":6},"end":{"line":296,"column":7}},"141":{"start":{"line":295,"column":8},"end":{"line":295,"column":61}},"142":{"start":{"line":298,"column":6},"end":{"line":298,"column":27}},"143":{"start":{"line":299,"column":6},"end":{"line":299,"column":31}},"144":{"start":{"line":304,"column":0},"end":{"line":310,"column":2}},"145":{"start":{"line":305,"column":2},"end":{"line":307,"column":3}},"146":{"start":{"line":306,"column":4},"end":{"line":306,"column":41}},"147":{"start":{"line":309,"column":2},"end":{"line":309,"column":15}},"148":{"start":{"line":312,"column":0},"end":{"line":312,"column":32}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":27}},{"start":{"line":18,"column":31},"end":{"line":18,"column":51}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":25}},{"start":{"line":22,"column":29},"end":{"line":22,"column":57}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":9}},{"start":{"line":58,"column":9},"end":{"line":58,"column":9}}]},"10":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"13":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"14":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]},"15":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":95},"end":{"line":89,"column":121}},{"start":{"line":89,"column":124},"end":{"line":89,"column":126}}]},"16":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"17":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":33}},{"start":{"line":96,"column":37},"end":{"line":96,"column":67}},{"start":{"line":96,"column":71},"end":{"line":96,"column":121}},{"start":{"line":96,"column":125},"end":{"line":96,"column":161}}]},"18":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"19":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"20":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"21":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":9},"end":{"line":126,"column":9}},{"start":{"line":126,"column":9},"end":{"line":126,"column":9}}]},"22":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"23":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"24":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":40}},{"start":{"line":134,"column":44},"end":{"line":134,"column":87}}]},"25":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"26":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":22},"end":{"line":171,"column":46}},{"start":{"line":171,"column":50},"end":{"line":171,"column":54}}]},"27":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":21},"end":{"line":175,"column":36}},{"start":{"line":175,"column":40},"end":{"line":175,"column":44}}]},"28":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":18},"end":{"line":176,"column":71}},{"start":{"line":176,"column":75},"end":{"line":176,"column":76}}]},"29":{"line":188,"type":"switch","locations":[{"start":{"line":190,"column":6},"end":{"line":193,"column":14}},{"start":{"line":195,"column":6},"end":{"line":198,"column":14}},{"start":{"line":200,"column":6},"end":{"line":203,"column":14}},{"start":{"line":205,"column":6},"end":{"line":208,"column":14}},{"start":{"line":210,"column":6},"end":{"line":213,"column":14}},{"start":{"line":215,"column":6},"end":{"line":218,"column":14}},{"start":{"line":220,"column":6},"end":{"line":222,"column":14}},{"start":{"line":224,"column":6},"end":{"line":226,"column":14}},{"start":{"line":227,"column":6},"end":{"line":229,"column":14}},{"start":{"line":230,"column":6},"end":{"line":232,"column":14}},{"start":{"line":233,"column":6},"end":{"line":235,"column":14}},{"start":{"line":236,"column":6},"end":{"line":238,"column":14}},{"start":{"line":239,"column":6},"end":{"line":241,"column":14}},{"start":{"line":242,"column":6},"end":{"line":242,"column":33}},{"start":{"line":243,"column":6},"end":{"line":243,"column":23}},{"start":{"line":244,"column":6},"end":{"line":244,"column":25}},{"start":{"line":245,"column":6},"end":{"line":249,"column":14}}]},"30":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"31":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"32":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"33":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"34":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"35":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":6},"end":{"line":288,"column":6}},{"start":{"line":288,"column":6},"end":{"line":288,"column":6}}]},"36":{"line":289,"type":"cond-expr","locations":[{"start":{"line":289,"column":95},"end":{"line":289,"column":121}},{"start":{"line":289,"column":124},"end":{"line":289,"column":126}}]},"37":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":6}},{"start":{"line":294,"column":6},"end":{"line":294,"column":6}}]},"38":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]}},"code":["'use strict';","","var crypto = require('crypto');","var url = require('url');","var util = require('util');","var AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options (language, clientId, apiKey, region, excludePartialMatches)"," */","var GoogleGeocoder = function GoogleGeocoder(httpAdapter, options) {","  this.options = ['language', 'apiKey', 'clientId', 'region', 'excludePartialMatches', 'channel'];","","  GoogleGeocoder.super_.call(this, httpAdapter, options);","","  if (this.options.clientId && !this.options.apiKey) {","    throw new Error('You must specify a apiKey (privateKey)');","  }","","  if (this.options.apiKey && !httpAdapter.supportsHttps()) {","    throw new Error('You must use https http adapter');","  }","};","","util.inherits(GoogleGeocoder, AbstractGeocoder);","","// Google geocoding API endpoint","GoogleGeocoder.prototype._endpoint = 'https://maps.googleapis.com/maps/api/geocode/json';","","/**"," * Geocode"," * @param <string>   value    Value ton geocode (Address)"," * @param <function> callback Callback method"," */","GoogleGeocoder.prototype._geocode = function (value, callback) {","","  var _this = this;","  var params = this._prepareQueryString();","","  if (value.address) {","    var components = null;","","    if (value.country) {","      components = 'country:' + value.country;","    }","","    if (value.zipcode) {","      if (components) {","        components += '|';","      }","      components += 'postal_code:' + value.zipcode;","    }","","    params.components = this._encodeSpecialChars(components);","    params.address = this._encodeSpecialChars(value.address);","  } else if (value.googlePlaceId) {","    params.place_id = value.googlePlaceId;","  } else {","    params.address = this._encodeSpecialChars(value);","  }","","  if (value.language) {","    params.language = value.language;","  }","","  if (value.region) {","    params.region = value.region;","  }","","  var excludePartialMatches = params.excludePartialMatches;","  delete params.excludePartialMatches;","","  this._signedRequest(this._endpoint, params);","  this.httpAdapter.get(this._endpoint, params, function (err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"","      // error_message may or may not be present","      if (result.status === 'ZERO_RESULTS') {","        results.raw = result;","        return callback(false, results);","      }","","      if (result.status !== 'OK') {","        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});","      }","","      for (var i = 0; i < result.results.length; i++) {","","        var currentResult = result.results[i];","","        if (excludePartialMatches && excludePartialMatches === true && typeof currentResult.partial_match !== 'undefined' && currentResult.partial_match === true) {","          continue;","        }","","        results.push(_this._formatResult(currentResult));","      }","","      results.raw = result;","      callback(false, results);","    }","","  });","","};","","GoogleGeocoder.prototype._prepareQueryString = function () {","  var params = {","    'sensor': false","  };","","  if (this.options.language) {","    params.language = this.options.language;","  }","","  if (this.options.region) {","    params.region = this.options.region;","  }","","  if (this.options.clientId) {","    params.client = this.options.clientId;","  } else if (this.options.apiKey) {","    params.key = this.options.apiKey;","  }","","  if (this.options.channel) {","    params.channel = this.options.channel;","  }","","  if (this.options.excludePartialMatches && this.options.excludePartialMatches === true) {","    params.excludePartialMatches = true;","  }","","  return params;","","};","","GoogleGeocoder.prototype._signedRequest = function (endpoint, params) {","","  if (this.options.clientId) {","    var request = url.parse(endpoint);","    var fullRequestPath = request.path + url.format({query: params});","","    var decodedKey = new Buffer(this.options.apiKey.replace('-', '+').replace('_', '/'), 'base64');","    var hmac = crypto.createHmac('sha1', decodedKey);","    hmac.update(fullRequestPath);","    var signature = hmac.digest('base64');","","    signature = signature.replace(/\\+/g, '-').replace(/\\//g, '_');","","    params.signature = signature;","  }","","  return params;","};","","GoogleGeocoder.prototype._formatResult = function (result) {","","  var googleConfidenceLookup = {","    ROOFTOP: 1,","    RANGE_INTERPOLATED: 0.9,","    GEOMETRIC_CENTER: 0.7,","    APPROXIMATE: 0.5","  };","","  var extractedObj = {","    formattedAddress: result.formatted_address || null,","    latitude: result.geometry.location.lat,","    longitude: result.geometry.location.lng,","    extra: {","      googlePlaceId: result.place_id || null,","      confidence: googleConfidenceLookup[result.geometry.location_type] || 0,","      premise: null,","      subpremise: null,","      neighborhood: null,","      establishment: null","    },","    administrativeLevels: {","    }","  };","","  for (var i = 0; i < result.address_components.length; i++) {","    var addressType = result.address_components[i].types[0];","    switch (addressType) {","      //Country","      case 'country':","        extractedObj.country = result.address_components[i].long_name;","        extractedObj.countryCode = result.address_components[i].short_name;","        break;","      //Administrative Level 1","      case 'administrative_area_level_1':","        extractedObj.administrativeLevels.level1long = result.address_components[i].long_name;","        extractedObj.administrativeLevels.level1short = result.address_components[i].short_name;","        break;","      //Administrative Level 2","      case 'administrative_area_level_2':","        extractedObj.administrativeLevels.level2long = result.address_components[i].long_name;","        extractedObj.administrativeLevels.level2short = result.address_components[i].short_name;","        break;","      //Administrative Level 3","      case 'administrative_area_level_3':","        extractedObj.administrativeLevels.level3long = result.address_components[i].long_name;","        extractedObj.administrativeLevels.level3short = result.address_components[i].short_name;","        break;","      //Administrative Level 4","      case 'administrative_area_level_4':","        extractedObj.administrativeLevels.level4long = result.address_components[i].long_name;","        extractedObj.administrativeLevels.level4short = result.address_components[i].short_name;","        break;","      //Administrative Level 5","      case 'administrative_area_level_5':","        extractedObj.administrativeLevels.level5long = result.address_components[i].long_name;","        extractedObj.administrativeLevels.level5short = result.address_components[i].short_name;","        break;","      // City","      case 'locality':","        extractedObj.city = result.address_components[i].long_name;","        break;","      // Address","      case 'postal_code':","        extractedObj.zipcode = result.address_components[i].long_name;","        break;","      case 'route':","        extractedObj.streetName = result.address_components[i].long_name;","        break;","      case 'street_number':","        extractedObj.streetNumber = result.address_components[i].long_name;","        break;","      case 'premise':","        extractedObj.extra.premise = result.address_components[i].long_name;","        break;","      case 'subpremise':","        extractedObj.extra.subpremise = result.address_components[i].long_name;","        break;","      case 'establishment':","        extractedObj.extra.establishment = result.address_components[i].long_name;","        break;","      case 'sublocality_level_1':","      case 'political':","      case 'sublocality':","      case 'neighborhood':","        if(!extractedObj.extra.neighborhood) {","          extractedObj.extra.neighborhood = result.address_components[i].long_name;","        }","        break;","    }","  }","  return extractedObj;","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback Callback method"," */","GoogleGeocoder.prototype._reverse = function (query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","  var params = this._prepareQueryString();","","  params.latlng = lat + ',' + lng;","","  if (query.language) {","    params.language = query.language;","  }","","  if (query.result_type) {","    params.result_type = query.result_type;","  }","","  if (query.location_type) {","    params.location_type = query.location_type;","  }","","  this._signedRequest(this._endpoint, params);","  this.httpAdapter.get(this._endpoint, params, function (err, result) {","    if (err) {","      return callback(err);","    } else {","      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"","      // error_message may or may not be present","      if (result.status !== 'OK') {","        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});","      }","","      var results = [];","","      if (result.results.length > 0) {","        results.push(_this._formatResult(result.results[0]));","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","GoogleGeocoder.prototype._encodeSpecialChars = function(value) {","  if (typeof value === 'string') {","    return value.replace(/\\u001a/g, ' ');","  }","","  return value;","};","","module.exports = GoogleGeocoder;",""],"l":{"3":1,"4":1,"5":1,"6":1,"13":1,"14":0,"16":0,"18":0,"19":0,"22":0,"23":0,"27":1,"30":1,"37":1,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"49":0,"50":0,"51":0,"53":0,"56":0,"57":0,"58":0,"59":0,"61":0,"64":0,"65":0,"68":0,"69":0,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"80":0,"83":0,"84":0,"85":0,"88":0,"89":0,"92":0,"94":0,"96":0,"97":0,"100":0,"103":0,"104":0,"111":1,"112":0,"116":0,"117":0,"120":0,"121":0,"124":0,"125":0,"126":0,"127":0,"130":0,"131":0,"134":0,"135":0,"138":0,"142":1,"144":0,"145":0,"146":0,"148":0,"149":0,"150":0,"151":0,"153":0,"155":0,"158":0,"161":1,"163":0,"170":0,"186":0,"187":0,"188":0,"191":0,"192":0,"193":0,"196":0,"197":0,"198":0,"201":0,"202":0,"203":0,"206":0,"207":0,"208":0,"211":0,"212":0,"213":0,"216":0,"217":0,"218":0,"221":0,"222":0,"225":0,"226":0,"228":0,"229":0,"231":0,"232":0,"234":0,"235":0,"237":0,"238":0,"240":0,"241":0,"246":0,"247":0,"249":0,"252":0,"260":1,"261":0,"262":0,"264":0,"265":0,"267":0,"269":0,"270":0,"273":0,"274":0,"277":0,"278":0,"281":0,"282":0,"283":0,"284":0,"288":0,"289":0,"292":0,"294":0,"295":0,"298":0,"299":0,"304":1,"305":0,"306":0,"309":0,"312":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"formatGeocoderName","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":54}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":42}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":37},"end":{"line":47,"column":63}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":37},"end":{"line":60,"column":63}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"3":{"start":{"line":6,"column":0},"end":{"line":8,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":7,"column":53}},"5":{"start":{"line":15,"column":0},"end":{"line":40,"column":2}},"6":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":53}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},"9":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":68}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":33}},"12":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},"14":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"15":{"start":{"line":32,"column":4},"end":{"line":36,"column":7}},"16":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":31}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":25}},"19":{"start":{"line":47,"column":0},"end":{"line":53,"column":2}},"20":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"21":{"start":{"line":49,"column":4},"end":{"line":49,"column":77}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":40}},"23":{"start":{"line":60,"column":0},"end":{"line":77,"column":2}},"24":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":80}},"26":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"27":{"start":{"line":65,"column":4},"end":{"line":65,"column":85}},"28":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"29":{"start":{"line":69,"column":4},"end":{"line":69,"column":85}},"30":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"31":{"start":{"line":73,"column":4},"end":{"line":73,"column":88}},"32":{"start":{"line":76,"column":2},"end":{"line":76,"column":40}},"33":{"start":{"line":79,"column":0},"end":{"line":79,"column":34}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":18}},{"start":{"line":22,"column":22},"end":{"line":22,"column":48}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":14}},{"start":{"line":27,"column":18},"end":{"line":27,"column":40}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"8":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":60}}]},"9":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"11":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"12":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":23}},{"start":{"line":64,"column":28},"end":{"line":64,"column":45}},{"start":{"line":64,"column":49},"end":{"line":64,"column":80}}]},"13":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"14":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":23}},{"start":{"line":68,"column":28},"end":{"line":68,"column":45}},{"start":{"line":68,"column":49},"end":{"line":68,"column":80}}]},"15":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"16":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":35}},{"start":{"line":72,"column":40},"end":{"line":72,"column":58}},{"start":{"line":72,"column":62},"end":{"line":72,"column":80}}]}},"code":["'use strict';","","var net = require('net');","var ValueError = require('../error/valueerror.js');","","function formatGeocoderName(name) {","  return name.toLowerCase().replace(/geocoder$/, '');","}","","/**"," * AbstractGeocoder Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options"," */","var AbstractGeocoder = function(httpAdapter, options) {","  if (!this.constructor.name) {","    throw new Error('The Constructor must be named');","  }","","  this.name = formatGeocoderName(this.constructor.name);","","  if (!httpAdapter || httpAdapter == 'undefined') {","    throw new Error(this.constructor.name + ' need an httpAdapter');","  }","  this.httpAdapter = httpAdapter;","","  if (!options || options == 'undefined') {","    options = {};","  }","","  if (this.options) {","    this.options.forEach(function(option) {","      if (!options[option] || options[option] == 'undefined') {","        options[option] = null;","      }","    });","  }","","  this.options = options;","};","","/**","* Reverse geocoding","* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude","* @param <function> callback Callback method","*/","AbstractGeocoder.prototype.reverse = function(query, callback) {","  if (typeof this._reverse != 'function') {","    throw new Error(this.constructor.name + ' no support reverse geocoding');","  }","","  return this._reverse(query, callback);","};","","/**","* Geocode","* @param <string>   value    Value to geocode","* @param <function> callback Callback method","*/","AbstractGeocoder.prototype.geocode = function(value, callback) {","  if (typeof this._geocode != 'function') {","    throw new ValueError(this.constructor.name + ' does not support geocoding');","  }","  if (net.isIPv4(value) && (!this.supportIPv4 || this.supportIPv4 == 'undefined')) {","    throw new ValueError(this.constructor.name + ' does not support geocoding IPv4');","  }","","  if (net.isIPv6(value) && (!this.supportIPv6 || this.supportIPv6 == 'undefined')) {","    throw new ValueError(this.constructor.name + ' does not support geocoding IPv6');","  }","","  if (this.supportAddress === false && (!net.isIPv4(value) && !net.isIPv6(value))) {","    throw new ValueError(this.constructor.name + ' does not support geocoding address');","  }","","  return this._geocode(value, callback);","};","","module.exports = AbstractGeocoder;",""],"l":{"3":1,"4":1,"6":1,"7":0,"15":1,"16":0,"17":0,"20":0,"22":0,"23":0,"25":0,"27":0,"28":0,"31":0,"32":0,"33":0,"34":0,"39":0,"47":1,"48":0,"49":0,"52":0,"60":1,"61":0,"62":0,"64":0,"65":0,"68":0,"69":0,"72":0,"73":0,"76":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/error/valueerror.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/error/valueerror.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":21}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":52}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":29}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":27}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}}},"branchMap":{},"code":["var util = require('util');","","var ValueError = function(message) {","    Error.call(this);","    Error.captureStackTrace(this, this.constructor);","","    this.name = 'ValueError';","    this.message = message;","};","","util.inherits(ValueError, Error);","","module.exports = ValueError;",""],"l":{"1":1,"3":1,"4":0,"5":0,"7":0,"8":0,"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/heregeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/heregeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"HereGeocoder","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":63}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":34},"end":{"line":32,"column":61}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":54},"end":{"line":60,"column":77}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":45},"end":{"line":81,"column":57}}},"5":{"name":"(anonymous_5)","line":109,"loc":{"start":{"line":109,"column":39},"end":{"line":109,"column":57}}},"6":{"name":"(anonymous_6)","line":166,"loc":{"start":{"line":166,"column":34},"end":{"line":166,"column":61}}},"7":{"name":"(anonymous_7)","line":175,"loc":{"start":{"line":175,"column":54},"end":{"line":175,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":51}},"2":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":87}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":79}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":46}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":106}},"10":{"start":{"line":32,"column":0},"end":{"line":79,"column":2}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":19}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":42}},"13":{"start":{"line":37,"column":2},"end":{"line":58,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":41}},"16":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":51}},"18":{"start":{"line":44,"column":4},"end":{"line":51,"column":5}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},"20":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"21":{"start":{"line":47,"column":12},"end":{"line":47,"column":39}},"22":{"start":{"line":49,"column":12},"end":{"line":49,"column":32}},"23":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"24":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"25":{"start":{"line":55,"column":4},"end":{"line":55,"column":38}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":30}},"27":{"start":{"line":60,"column":2},"end":{"line":78,"column":5}},"28":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"29":{"start":{"line":62,"column":4},"end":{"line":62,"column":25}},"30":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"31":{"start":{"line":65,"column":6},"end":{"line":65,"column":36}},"32":{"start":{"line":67,"column":6},"end":{"line":67,"column":41}},"33":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"34":{"start":{"line":69,"column":8},"end":{"line":69,"column":40}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":53}},"36":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"37":{"start":{"line":76,"column":6},"end":{"line":76,"column":31}},"38":{"start":{"line":81,"column":0},"end":{"line":107,"column":2}},"39":{"start":{"line":82,"column":2},"end":{"line":85,"column":4}},"40":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"41":{"start":{"line":88,"column":4},"end":{"line":88,"column":39}},"42":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"43":{"start":{"line":91,"column":4},"end":{"line":91,"column":43}},"44":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"45":{"start":{"line":94,"column":4},"end":{"line":94,"column":44}},"46":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"47":{"start":{"line":97,"column":4},"end":{"line":97,"column":54}},"48":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"49":{"start":{"line":100,"column":4},"end":{"line":100,"column":42}},"50":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"51":{"start":{"line":103,"column":4},"end":{"line":103,"column":38}},"52":{"start":{"line":106,"column":2},"end":{"line":106,"column":16}},"53":{"start":{"line":109,"column":0},"end":{"line":159,"column":2}},"54":{"start":{"line":110,"column":2},"end":{"line":110,"column":39}},"55":{"start":{"line":111,"column":2},"end":{"line":111,"column":39}},"56":{"start":{"line":112,"column":2},"end":{"line":112,"column":8}},"57":{"start":{"line":114,"column":2},"end":{"line":133,"column":4}},"58":{"start":{"line":135,"column":2},"end":{"line":156,"column":3}},"59":{"start":{"line":136,"column":4},"end":{"line":136,"column":51}},"60":{"start":{"line":137,"column":4},"end":{"line":155,"column":5}},"61":{"start":{"line":140,"column":8},"end":{"line":140,"column":56}},"62":{"start":{"line":141,"column":8},"end":{"line":141,"column":14}},"63":{"start":{"line":144,"column":8},"end":{"line":144,"column":52}},"64":{"start":{"line":145,"column":8},"end":{"line":145,"column":14}},"65":{"start":{"line":148,"column":8},"end":{"line":148,"column":76}},"66":{"start":{"line":149,"column":8},"end":{"line":149,"column":50}},"67":{"start":{"line":150,"column":8},"end":{"line":150,"column":14}},"68":{"start":{"line":153,"column":8},"end":{"line":153,"column":76}},"69":{"start":{"line":154,"column":8},"end":{"line":154,"column":51}},"70":{"start":{"line":158,"column":2},"end":{"line":158,"column":22}},"71":{"start":{"line":166,"column":0},"end":{"line":194,"column":2}},"72":{"start":{"line":167,"column":2},"end":{"line":167,"column":22}},"73":{"start":{"line":168,"column":2},"end":{"line":168,"column":22}},"74":{"start":{"line":170,"column":2},"end":{"line":170,"column":19}},"75":{"start":{"line":171,"column":2},"end":{"line":171,"column":42}},"76":{"start":{"line":172,"column":2},"end":{"line":172,"column":31}},"77":{"start":{"line":173,"column":2},"end":{"line":173,"column":32}},"78":{"start":{"line":175,"column":2},"end":{"line":193,"column":5}},"79":{"start":{"line":176,"column":4},"end":{"line":176,"column":21}},"80":{"start":{"line":177,"column":4},"end":{"line":177,"column":25}},"81":{"start":{"line":179,"column":4},"end":{"line":192,"column":5}},"82":{"start":{"line":180,"column":6},"end":{"line":180,"column":36}},"83":{"start":{"line":182,"column":6},"end":{"line":182,"column":41}},"84":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"85":{"start":{"line":184,"column":8},"end":{"line":184,"column":40}},"86":{"start":{"line":188,"column":6},"end":{"line":188,"column":53}},"87":{"start":{"line":189,"column":6},"end":{"line":189,"column":27}},"88":{"start":{"line":191,"column":6},"end":{"line":191,"column":31}},"89":{"start":{"line":196,"column":0},"end":{"line":196,"column":30}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":25}},{"start":{"line":14,"column":29},"end":{"line":14,"column":50}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"10":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"12":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"13":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"14":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"15":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"16":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"17":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":17},"end":{"line":110,"column":32}},{"start":{"line":110,"column":36},"end":{"line":110,"column":38}}]},"18":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":32}},{"start":{"line":111,"column":36},"end":{"line":111,"column":38}}]},"19":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":22},"end":{"line":115,"column":35}},{"start":{"line":115,"column":39},"end":{"line":115,"column":43}}]},"20":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":32}},{"start":{"line":119,"column":36},"end":{"line":119,"column":40}}]},"21":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":11},"end":{"line":120,"column":24}},{"start":{"line":120,"column":28},"end":{"line":120,"column":32}}]},"22":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":26}},{"start":{"line":121,"column":30},"end":{"line":121,"column":34}}]},"23":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":10},"end":{"line":122,"column":22}},{"start":{"line":122,"column":26},"end":{"line":122,"column":30}}]},"24":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":13},"end":{"line":123,"column":31}},{"start":{"line":123,"column":35},"end":{"line":123,"column":39}}]},"25":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":30}},{"start":{"line":124,"column":34},"end":{"line":124,"column":38}}]},"26":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":30}},{"start":{"line":125,"column":34},"end":{"line":125,"column":38}}]},"27":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":18},"end":{"line":126,"column":37}},{"start":{"line":126,"column":41},"end":{"line":126,"column":45}}]},"28":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":14},"end":{"line":127,"column":30}},{"start":{"line":127,"column":34},"end":{"line":127,"column":38}}]},"29":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":19},"end":{"line":129,"column":38}},{"start":{"line":129,"column":42},"end":{"line":129,"column":46}}]},"30":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":18},"end":{"line":130,"column":34}},{"start":{"line":130,"column":38},"end":{"line":130,"column":39}}]},"31":{"line":137,"type":"switch","locations":[{"start":{"line":139,"column":6},"end":{"line":141,"column":14}},{"start":{"line":143,"column":6},"end":{"line":145,"column":14}},{"start":{"line":147,"column":6},"end":{"line":150,"column":14}},{"start":{"line":152,"column":6},"end":{"line":154,"column":51}}]},"32":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"33":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]}},"code":["var util = require('util'),","  AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options (appId, appCode, language, politicalView, country, state)"," */","var HereGeocoder = function HereGeocoder(httpAdapter, options) {","  this.options = ['appId', 'appCode', 'language', 'politicalView', 'country', 'state'];","","  HereGeocoder.super_.call(this, httpAdapter, options);","","  if (!this.options.appId || !this.options.appCode) {","    throw new Error('You must specify appId and appCode to use Here Geocoder');","  }","};","","util.inherits(HereGeocoder, AbstractGeocoder);","","// Here geocoding API endpoint","HereGeocoder.prototype._geocodeEndpoint = 'https://geocoder.cit.api.here.com/6.2/geocode.json';","","// Here reverse geocoding API endpoint","HereGeocoder.prototype._reverseEndpoint = 'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json';","","/**"," * Geocode"," * @param <string>   value    Value ton geocode (Address)"," * @param <function> callback Callback method"," */","HereGeocoder.prototype._geocode = function (value, callback) {","","  var _this = this;","  var params = this._prepareQueryString();","","  if (value.address) {","    if (value.language) {","        params.language = value.language;","    }","    if (value.politicalView) {","        params.politicalview = value.politicalView;","    }","    if (value.country) {","        params.country = value.country;","        if (value.state) {","            params.state = value.state;","        } else {","            delete params.state;","        }","    }","    if (value.zipcode) {","        params.postalcode = value.zipcode;","    }","    params.searchtext = value.address;","  } else {","    params.searchtext = value;","  }","","  this.httpAdapter.get(this._geocodeEndpoint, params, function (err, result) {","    var results = [];","    results.raw = result;","","    if (err) {","      return callback(err, results);","    } else {","      var view = result.Response.View[0];","      if (!view) {","        return callback(false, results);","      }","","      // Format each geocoding result","      results = view.Result.map(_this._formatResult);","      results.raw = result;","","      callback(false, results);","    }","  });","};","","HereGeocoder.prototype._prepareQueryString = function () {","  var params = {","    'additionaldata': 'Country2,true',","    'gen': 8","  };","","  if (this.options.appId) {","    params.app_id = this.options.appId;","  }","  if (this.options.appCode) {","    params.app_code = this.options.appCode;","  }","  if (this.options.language) {","    params.language = this.options.language;","  }","  if (this.options.politicalView) {","    params.politicalview = this.options.politicalView;","  }","  if (this.options.country) {","    params.country = this.options.country;","  }","  if (this.options.state) {","    params.state = this.options.state;","  }","","  return params;","};","","HereGeocoder.prototype._formatResult = function (result) {","  var location = result.Location || {};","  var address = location.Address || {};","  var i;","","  var extractedObj = {","    formattedAddress: address.Label || null,","    latitude: location.DisplayPosition.Latitude,","    longitude: location.DisplayPosition.Longitude,","    country: null,","    countryCode: address.Country || null,","    state: address.State || null,","    county: address.County || null,","    city: address.City || null,","    zipcode: address.PostalCode || null,","    district: address.District || null,","    streetName: address.Street || null,","    streetNumber: address.HouseNumber || null,","    building: address.Building || null,","    extra: {","      herePlaceId: location.LocationId || null,","      confidence: result.Relevance || 0","    },","    administrativeLevels: {}","  };","","  for (i = 0; i < address.AdditionalData.length; i++) {","    var additionalData = address.AdditionalData[i];","    switch (additionalData.key) {","      //Country 2-digit code","      case 'Country2':","        extractedObj.countryCode = additionalData.value;","        break;","      //Country name","      case 'CountryName':","        extractedObj.country = additionalData.value;","        break;","      //State name","      case 'StateName':","        extractedObj.administrativeLevels.level1long = additionalData.value;","        extractedObj.state = additionalData.value;","        break;","      //County name","      case 'CountyName':","        extractedObj.administrativeLevels.level2long = additionalData.value;","        extractedObj.county = additionalData.value;","    }","  }","","  return extractedObj;","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback Callback method"," */","HereGeocoder.prototype._reverse = function (query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","  var params = this._prepareQueryString();","  params.pos = lat + ',' + lng;","  params.mode = 'trackPosition';","","  this.httpAdapter.get(this._reverseEndpoint, params, function (err, result) {","    var results = [];","    results.raw = result;","","    if (err) {","      return callback(err, results);","    } else {","      var view = result.Response.View[0];","      if (!view) {","        return callback(false, results);","      }","","      // Format each geocoding result","      results = view.Result.map(_this._formatResult);","      results.raw = result;","","      callback(false, results);","    }","  });","};","","module.exports = HereGeocoder;",""],"l":{"1":1,"9":1,"10":0,"12":0,"14":0,"15":0,"19":1,"22":1,"25":1,"32":1,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"52":0,"53":0,"55":0,"57":0,"60":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"69":0,"73":0,"74":0,"76":0,"81":1,"82":0,"87":0,"88":0,"90":0,"91":0,"93":0,"94":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"106":0,"109":1,"110":0,"111":0,"112":0,"114":0,"135":0,"136":0,"137":0,"140":0,"141":0,"144":0,"145":0,"148":0,"149":0,"150":0,"153":0,"154":0,"158":0,"166":1,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"175":0,"176":0,"177":0,"179":0,"180":0,"182":0,"183":0,"184":0,"188":0,"189":0,"191":0,"196":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/agolgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/agolgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"AGOLGeocoder","line":10,"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":63}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":9},"end":{"line":47,"column":20}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":9},"end":{"line":50,"column":43}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":10},"end":{"line":55,"column":26}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":35},"end":{"line":68,"column":54}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":53},"end":{"line":82,"column":75}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":33},"end":{"line":101,"column":59}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":16},"end":{"line":113,"column":48}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":51},"end":{"line":121,"column":73}}},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":17},"end":{"line":144,"column":37}}},"11":{"name":"(anonymous_11)","line":153,"loc":{"start":{"line":153,"column":39},"end":{"line":153,"column":56}}},"12":{"name":"(anonymous_12)","line":230,"loc":{"start":{"line":230,"column":33},"end":{"line":230,"column":59}}},"13":{"name":"(anonymous_13)","line":236,"loc":{"start":{"line":236,"column":16},"end":{"line":236,"column":51}}},"14":{"name":"(anonymous_14)","line":244,"loc":{"start":{"line":244,"column":58},"end":{"line":244,"column":80}}},"15":{"name":"(anonymous_15)","line":264,"loc":{"start":{"line":264,"column":17},"end":{"line":264,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":10,"column":0},"end":{"line":37,"column":2}},"3":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":83}},"5":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":17}},"7":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"9":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"11":{"start":{"line":28,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":76}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":25}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":18}},"16":{"start":{"line":39,"column":0},"end":{"line":39,"column":85}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":109}},"18":{"start":{"line":41,"column":0},"end":{"line":41,"column":126}},"19":{"start":{"line":46,"column":0},"end":{"line":66,"column":2}},"20":{"start":{"line":48,"column":4},"end":{"line":48,"column":34}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":24}},"22":{"start":{"line":53,"column":4},"end":{"line":53,"column":52}},"23":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"24":{"start":{"line":57,"column":6},"end":{"line":57,"column":18}},"25":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"26":{"start":{"line":61,"column":6},"end":{"line":61,"column":25}},"27":{"start":{"line":63,"column":6},"end":{"line":63,"column":18}},"28":{"start":{"line":68,"column":0},"end":{"line":94,"column":2}},"29":{"start":{"line":69,"column":2},"end":{"line":69,"column":19}},"30":{"start":{"line":71,"column":2},"end":{"line":74,"column":5}},"31":{"start":{"line":72,"column":4},"end":{"line":72,"column":39}},"32":{"start":{"line":73,"column":4},"end":{"line":73,"column":11}},"33":{"start":{"line":76,"column":2},"end":{"line":80,"column":4}},"34":{"start":{"line":82,"column":2},"end":{"line":93,"column":5}},"35":{"start":{"line":83,"column":4},"end":{"line":92,"column":5}},"36":{"start":{"line":84,"column":6},"end":{"line":84,"column":27}},"37":{"start":{"line":86,"column":6},"end":{"line":86,"column":34}},"38":{"start":{"line":87,"column":6},"end":{"line":87,"column":71}},"39":{"start":{"line":88,"column":6},"end":{"line":88,"column":38}},"40":{"start":{"line":89,"column":6},"end":{"line":89,"column":64}},"41":{"start":{"line":91,"column":6},"end":{"line":91,"column":29}},"42":{"start":{"line":101,"column":0},"end":{"line":151,"column":2}},"43":{"start":{"line":102,"column":2},"end":{"line":102,"column":19}},"44":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"45":{"start":{"line":105,"column":4},"end":{"line":105,"column":71}},"46":{"start":{"line":108,"column":2},"end":{"line":111,"column":3}},"47":{"start":{"line":110,"column":4},"end":{"line":110,"column":116}},"48":{"start":{"line":113,"column":2},"end":{"line":142,"column":4}},"49":{"start":{"line":114,"column":4},"end":{"line":119,"column":6}},"50":{"start":{"line":121,"column":4},"end":{"line":141,"column":7}},"51":{"start":{"line":122,"column":6},"end":{"line":122,"column":34}},"52":{"start":{"line":123,"column":8},"end":{"line":140,"column":9}},"53":{"start":{"line":124,"column":10},"end":{"line":124,"column":31}},"54":{"start":{"line":127,"column":10},"end":{"line":131,"column":11}},"55":{"start":{"line":128,"column":12},"end":{"line":128,"column":35}},"56":{"start":{"line":130,"column":12},"end":{"line":130,"column":24}},"57":{"start":{"line":133,"column":10},"end":{"line":133,"column":27}},"58":{"start":{"line":134,"column":10},"end":{"line":136,"column":11}},"59":{"start":{"line":135,"column":12},"end":{"line":135,"column":67}},"60":{"start":{"line":138,"column":10},"end":{"line":138,"column":31}},"61":{"start":{"line":139,"column":10},"end":{"line":139,"column":35}},"62":{"start":{"line":144,"column":2},"end":{"line":150,"column":5}},"63":{"start":{"line":145,"column":4},"end":{"line":149,"column":5}},"64":{"start":{"line":146,"column":6},"end":{"line":146,"column":27}},"65":{"start":{"line":148,"column":6},"end":{"line":148,"column":36}},"66":{"start":{"line":153,"column":0},"end":{"line":223,"column":2}},"67":{"start":{"line":154,"column":2},"end":{"line":167,"column":3}},"68":{"start":{"line":155,"column":4},"end":{"line":166,"column":6}},"69":{"start":{"line":169,"column":2},"end":{"line":169,"column":21}},"70":{"start":{"line":170,"column":2},"end":{"line":170,"column":25}},"71":{"start":{"line":171,"column":2},"end":{"line":171,"column":18}},"72":{"start":{"line":172,"column":2},"end":{"line":172,"column":19}},"73":{"start":{"line":173,"column":2},"end":{"line":173,"column":23}},"74":{"start":{"line":174,"column":2},"end":{"line":174,"column":21}},"75":{"start":{"line":175,"column":2},"end":{"line":175,"column":26}},"76":{"start":{"line":176,"column":2},"end":{"line":176,"column":24}},"77":{"start":{"line":177,"column":2},"end":{"line":177,"column":24}},"78":{"start":{"line":178,"column":2},"end":{"line":178,"column":26}},"79":{"start":{"line":180,"column":2},"end":{"line":180,"column":45}},"80":{"start":{"line":181,"column":2},"end":{"line":209,"column":3}},"81":{"start":{"line":182,"column":4},"end":{"line":208,"column":5}},"82":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"83":{"start":{"line":184,"column":8},"end":{"line":184,"column":36}},"84":{"start":{"line":186,"column":6},"end":{"line":188,"column":7}},"85":{"start":{"line":187,"column":8},"end":{"line":187,"column":39}},"86":{"start":{"line":189,"column":6},"end":{"line":191,"column":7}},"87":{"start":{"line":190,"column":8},"end":{"line":190,"column":37}},"88":{"start":{"line":192,"column":6},"end":{"line":194,"column":7}},"89":{"start":{"line":193,"column":8},"end":{"line":193,"column":44}},"90":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"91":{"start":{"line":196,"column":8},"end":{"line":196,"column":44}},"92":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"93":{"start":{"line":199,"column":8},"end":{"line":199,"column":42}},"94":{"start":{"line":201,"column":6},"end":{"line":203,"column":7}},"95":{"start":{"line":202,"column":8},"end":{"line":202,"column":42}},"96":{"start":{"line":204,"column":6},"end":{"line":207,"column":7}},"97":{"start":{"line":205,"column":8},"end":{"line":205,"column":43}},"98":{"start":{"line":206,"column":8},"end":{"line":206,"column":39}},"99":{"start":{"line":211,"column":2},"end":{"line":222,"column":4}},"100":{"start":{"line":230,"column":0},"end":{"line":271,"column":2}},"101":{"start":{"line":231,"column":2},"end":{"line":231,"column":22}},"102":{"start":{"line":232,"column":2},"end":{"line":232,"column":23}},"103":{"start":{"line":234,"column":2},"end":{"line":234,"column":19}},"104":{"start":{"line":236,"column":2},"end":{"line":262,"column":4}},"105":{"start":{"line":237,"column":4},"end":{"line":242,"column":6}},"106":{"start":{"line":244,"column":4},"end":{"line":261,"column":7}},"107":{"start":{"line":245,"column":6},"end":{"line":245,"column":34}},"108":{"start":{"line":246,"column":6},"end":{"line":260,"column":7}},"109":{"start":{"line":247,"column":8},"end":{"line":247,"column":29}},"110":{"start":{"line":250,"column":8},"end":{"line":253,"column":9}},"111":{"start":{"line":251,"column":10},"end":{"line":251,"column":46}},"112":{"start":{"line":252,"column":10},"end":{"line":252,"column":22}},"113":{"start":{"line":255,"column":8},"end":{"line":255,"column":25}},"114":{"start":{"line":256,"column":8},"end":{"line":256,"column":50}},"115":{"start":{"line":258,"column":8},"end":{"line":258,"column":29}},"116":{"start":{"line":259,"column":8},"end":{"line":259,"column":33}},"117":{"start":{"line":264,"column":2},"end":{"line":270,"column":5}},"118":{"start":{"line":265,"column":4},"end":{"line":269,"column":5}},"119":{"start":{"line":266,"column":6},"end":{"line":266,"column":27}},"120":{"start":{"line":268,"column":6},"end":{"line":268,"column":39}},"121":{"start":{"line":273,"column":0},"end":{"line":273,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":18}},{"start":{"line":12,"column":22},"end":{"line":12,"column":48}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"4":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":14}},{"start":{"line":16,"column":18},"end":{"line":16,"column":40}}]},"5":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"6":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":24}},{"start":{"line":20,"column":28},"end":{"line":20,"column":60}}]},"7":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"8":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":28}},{"start":{"line":24,"column":32},"end":{"line":24,"column":68}}]},"9":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"10":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":28}},{"start":{"line":28,"column":32},"end":{"line":28,"column":50}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"14":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"15":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"16":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"17":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"18":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":10}},{"start":{"line":127,"column":10},"end":{"line":127,"column":10}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"20":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"21":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"22":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"23":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":6}},{"start":{"line":186,"column":6},"end":{"line":186,"column":6}}]},"24":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"25":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":6}},{"start":{"line":192,"column":6},"end":{"line":192,"column":6}}]},"26":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"27":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]},"28":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"29":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"30":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":6}},{"start":{"line":246,"column":6},"end":{"line":246,"column":6}}]},"31":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]},"32":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]}},"code":["'use strict';","","var net = require('net');","","/**"," * Constructor"," * @param {Object} httpAdapter Http Adapter"," * @param {Object} options     Options (language, client_id, client_secret)"," */","var AGOLGeocoder = function AGOLGeocoder(httpAdapter, options) {","","  if (!httpAdapter || httpAdapter == 'undefined') {","    throw new Error('ArcGis Online Geocoder requires a httpAdapter to be defined');","  }","","  if (!options || options == 'undefined') {","    options = {};","  }","","  if (!options.client_id || options.client_id == 'undefined') {","    options.client_id = null;","  }","","  if (!options.client_secret || options.client_secret == 'undefined') {","    options.client_secret = null;","  }","","  if (!options.client_secret || !options.client_id) {","","    throw new Error('You must specify the client_id and the client_secret');","  }","","  this.options = options;","","  this.httpAdapter = httpAdapter;","  this.cache = {};","};","","AGOLGeocoder.prototype._authEndpoint = 'https://www.arcgis.com/sharing/oauth2/token';","AGOLGeocoder.prototype._endpoint = 'http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/find';","AGOLGeocoder.prototype._reverseEndpoint = 'http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode';","","//Cached vars","","","AGOLGeocoder.prototype._cachedToken = {","  'now': function() {","    return (new Date()).getTime();","  },","  'put': function(token, experation,cache) {","    cache.token = token;","    //Shave 30 secs off experation to ensure that we expire slightly before the actual expiration","    cache.tokenExp = this.now() + (experation - 30);","  },","  'get' : function(cache) {","    if(!cache) {","      return null;","    }","","    if(this.now() <= cache.tokenExp) {","      return cache.token;","    } else {","      return null;","    }","  }","};","","AGOLGeocoder.prototype._getToken = function(callback) {","  var _this = this;","","  if(_this._cachedToken.get(_this.cache) !== null) {","    callback(_this._cachedToken.get());","    return;","    }","","  var params = {","    'grant_type': 'client_credentials',","    'client_id': _this.options.client_id,","    'client_secret': _this.options.client_secret","  };","","  _this.httpAdapter.get(_this._authEndpoint, params, function(err, result) {","    if (err) {","      return callback(err);","    } else {","      result = JSON.parse(result);","      var tokenExpiration = (new Date()).getTime() + result.expires_in;","      var token = result.access_token;","      _this._cachedToken.put(token,tokenExpiration,_this.cache);","","      callback(false, token);","    }","  });","};","","/**"," * Geocode"," * @param {String}   value    Value to geocode (Address)"," * @param {Function} callback Callback method"," */","AGOLGeocoder.prototype.geocode = function(value, callback) {","  var _this = this;","","  if (net.isIP(value)) {","    throw new Error('The AGOL geocoder does not support IP addresses');","  }","","  if (value instanceof Array) {","    //As defined in http://resources.arcgis.com/en/help/arcgis-rest-api/#/Batch_geocoding/02r300000003000000/","    throw new Error('An ArcGIS Online organizational account is required to use the batch geocoding functionality');","  }","","  var execute = function (value,token,callback) {","    var params = {","      'token':token,","      'f':'json',","      'text':value,","      'outFields': 'AddNum,StPreDir,StName,StType,City,Postal,Region,Country'","    };","","    _this.httpAdapter.get(_this._endpoint, params, function(err, result) {","      result = JSON.parse(result);","        if (err) {","          return callback(err);","        } else {","          //This is to work around ESRI's habit of returning 200 OK for failures such as lack of authentication","          if(result.error){","            callback(result.error);","","            return null;","          }","","          var results = [];","          for(var i = 0; i < result.locations.length; i++) {","            results.push(_this._formatResult(result.locations[i]));","          }","","          results.raw = result;","          callback(false, results);","        }","    });","  };","","  this._getToken(function(err,token) {","    if (err) {","      return callback(err);","    } else {","      execute(value,token,callback);","    }","  });","};","","AGOLGeocoder.prototype._formatResult = function(result) {","  if(result.address){","    return {","      'latitude' : result.location.y,","      'longitude' : result.location.x,","      'country' : result.address.CountryCode,","      'city' : result.address.City,","      'state' : result.address.Region,","      'zipcode' : result.address.Postal,","      'countryCode' : result.address.CountryCode,","      'address': result.address.Address,","      'neighborhood': result.address.Neighborhood,","      'loc_name': result.address.Loc_name","    };","  }","","  var country = null;","  var countryCode = null;","  var city = null;","  var state = null;","  var stateCode = null;","  var zipcode = null;","  var streetPreDir = null;","  var streetType = null;","  var streetName = null;","  var streetNumber = null;","","  var attributes = result.feature.attributes;","  for (var property in attributes) {","    if (attributes.hasOwnProperty(property)) {","      if(property == 'City') {","        city = attributes[property];","      }","      if(property == 'Postal') {","        zipcode = attributes[property];","      }","      if(property == 'Region') {","        state = attributes[property];","      }","      if(property == 'StPreDir') {","        streetPreDir = attributes[property];","      }","      if(property == 'AddNum') {","        streetNumber = attributes[property];","      }","      if(property == 'StName') {","        streetName = attributes[property];","      }","      if(property == 'StType') {","        streetType = attributes[property];","      }","      if(property == 'Country') {","        countryCode = attributes[property];","        country = attributes[property];","      }","    }","  }","","  return {","    'latitude' : result.feature.geometry.y,","    'longitude' : result.feature.geometry.x,","    'country' : country,","    'city' : city,","    'state' : state,","    'stateCode' : stateCode,","    'zipcode' : zipcode,","    'streetName': streetPreDir + ' ' + streetName + ' ' + streetType,","    'streetNumber' : streetNumber,","    'countryCode' : countryCode","  };","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param {function} callback Callback method"," */","AGOLGeocoder.prototype.reverse = function(query, callback) {","  var lat = query.lat;","  var long = query.lon;","","  var _this = this;","","  var execute = function (lat,long,token,callback) {","    var params = {","      'token':token,","      'f':'json',","      'location' : long + ',' + lat,","      'outFields': 'AddrNum,StPreDir,StName,StType,City,Postal,Region,Country'","    };","","    _this.httpAdapter.get(_this._reverseEndpoint, params, function(err, result) {","      result = JSON.parse(result);","      if (err) {","        return callback(err);","      } else {","        //This is to work around ESRI's habit of returning 200 OK for failures such as lack of authentication","        if(result.error){","          callback(result.error,{raw:result});","          return null;","        }","","        var results = [];","        results.push(_this._formatResult(result));","","        results.raw = result;","        callback(false, results);","      }","    });","  };","","  this._getToken(function(err,token) {","    if (err) {","      return callback(err);","    } else {","      execute(lat,long,token,callback);","    }","  });","};","","module.exports = AGOLGeocoder;",""],"l":{"3":1,"10":1,"12":0,"13":0,"16":0,"17":0,"20":0,"21":0,"24":0,"25":0,"28":0,"30":0,"33":0,"35":0,"36":0,"39":1,"40":1,"41":1,"46":1,"48":0,"51":0,"53":0,"56":0,"57":0,"60":0,"61":0,"63":0,"68":1,"69":0,"71":0,"72":0,"73":0,"76":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"89":0,"91":0,"101":1,"102":0,"104":0,"105":0,"108":0,"110":0,"113":0,"114":0,"121":0,"122":0,"123":0,"124":0,"127":0,"128":0,"130":0,"133":0,"134":0,"135":0,"138":0,"139":0,"144":0,"145":0,"146":0,"148":0,"153":1,"154":0,"155":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"180":0,"181":0,"182":0,"183":0,"184":0,"186":0,"187":0,"189":0,"190":0,"192":0,"193":0,"195":0,"196":0,"198":0,"199":0,"201":0,"202":0,"204":0,"205":0,"206":0,"211":0,"230":1,"231":0,"232":0,"234":0,"236":0,"237":0,"244":0,"245":0,"246":0,"247":0,"250":0,"251":0,"252":0,"255":0,"256":0,"258":0,"259":0,"264":0,"265":0,"266":0,"268":0,"273":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"FreegeoipGeocoder","line":7,"loc":{"start":{"line":7,"column":24},"end":{"line":7,"column":64}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":39},"end":{"line":24,"column":65}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":55},"end":{"line":25,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":53}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":30}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":32}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":53}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":69}},"9":{"start":{"line":24,"column":0},"end":{"line":53,"column":2}},"10":{"start":{"line":25,"column":4},"end":{"line":51,"column":7}},"11":{"start":{"line":26,"column":8},"end":{"line":49,"column":9}},"12":{"start":{"line":27,"column":12},"end":{"line":27,"column":33}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"14":{"start":{"line":32,"column":12},"end":{"line":45,"column":15}},"15":{"start":{"line":47,"column":12},"end":{"line":47,"column":33}},"16":{"start":{"line":48,"column":12},"end":{"line":48,"column":37}},"17":{"start":{"line":55,"column":0},"end":{"line":55,"column":35}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]}},"code":["var util             = require('util'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var FreegeoipGeocoder = function FreegeoipGeocoder(httpAdapter) {","    this.supportIPv4   = true;","    this.supportIPv6   = true;","    this.supportAddress = false;","    FreegeoipGeocoder.super_.call(this, httpAdapter);","};","","util.inherits(FreegeoipGeocoder, AbstractGeocoder);","","// WS endpoint","FreegeoipGeocoder.prototype._endpoint = 'http://freegeoip.net/json/';","","/**","* Geocode","* @param <string>   value    Value to geocode (IP only)","* @param <function> callback Callback method","*/","FreegeoipGeocoder.prototype._geocode = function(value, callback) {","    this.httpAdapter.get(this._endpoint + value , { }, function(err, result) {","        if (err) {","            return callback(err);","        } else {","","            var results = [];","","            results.push({","                'ip' : result.ip,","                'countryCode' : result.country_code,","                'country' : result.country_name,","                'regionCode' : result.region_code,","                'regionName' : result.region_name,","                'city' : result.city,","                'zipcode' : result.zip_code,","                'timeZone' : result.time_zone,","                'latitude' : result.latitude,","                'longitude' : result.longitude,","                'metroCode' : result.metro_code","","            });","","            results.raw = result;","            callback(false, results);","        }","","    });","","};","","module.exports = FreegeoipGeocoder;",""],"l":{"1":1,"7":1,"8":0,"9":0,"10":0,"11":0,"14":1,"17":1,"24":1,"25":0,"26":0,"27":0,"30":0,"32":0,"47":0,"48":0,"55":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/datasciencetoolkitgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/datasciencetoolkitgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"DataScienceToolkitGeocoder","line":8,"loc":{"start":{"line":8,"column":33},"end":{"line":8,"column":90}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":49},"end":{"line":21,"column":65}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":48},"end":{"line":40,"column":74}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":43},"end":{"line":43,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":71}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"7":{"start":{"line":21,"column":0},"end":{"line":33,"column":2}},"8":{"start":{"line":22,"column":3},"end":{"line":22,"column":16}},"9":{"start":{"line":23,"column":3},"end":{"line":23,"column":43}},"10":{"start":{"line":25,"column":3},"end":{"line":27,"column":5}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":60}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":78}},"14":{"start":{"line":32,"column":4},"end":{"line":32,"column":79}},"15":{"start":{"line":40,"column":0},"end":{"line":72,"column":2}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":35}},"17":{"start":{"line":43,"column":4},"end":{"line":70,"column":7}},"18":{"start":{"line":44,"column":8},"end":{"line":68,"column":9}},"19":{"start":{"line":45,"column":12},"end":{"line":45,"column":33}},"20":{"start":{"line":47,"column":12},"end":{"line":47,"column":35}},"21":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"22":{"start":{"line":49,"column":16},"end":{"line":49,"column":81}},"23":{"start":{"line":52,"column":12},"end":{"line":52,"column":29}},"24":{"start":{"line":54,"column":12},"end":{"line":64,"column":15}},"25":{"start":{"line":66,"column":12},"end":{"line":66,"column":33}},"26":{"start":{"line":67,"column":12},"end":{"line":67,"column":37}},"27":{"start":{"line":74,"column":0},"end":{"line":74,"column":44}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":3},"end":{"line":25,"column":3}},{"start":{"line":25,"column":3},"end":{"line":25,"column":3}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":31},"end":{"line":32,"column":46}},{"start":{"line":32,"column":49},"end":{"line":32,"column":78}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":25},"end":{"line":58,"column":36}},{"start":{"line":58,"column":40},"end":{"line":58,"column":55}}]},"6":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":26},"end":{"line":59,"column":38}},{"start":{"line":59,"column":42},"end":{"line":59,"column":55}}]}},"code":["var util             = require('util'),","    net              = require('net'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var DataScienceToolkitGeocoder = function DataScienceToolkitGeocoder(httpAdapter,options) {","    this.options     = ['host'];","    this.supportIPv4 = true;","","    DataScienceToolkitGeocoder.super_.call(this, httpAdapter, options);","};","","util.inherits(DataScienceToolkitGeocoder, AbstractGeocoder);","","/**","* Build DSTK endpoint, allows for local DSTK installs","* @param <string>   value    Value to geocode (Address or IPv4)","*/","DataScienceToolkitGeocoder.prototype._endpoint = function(value) {","   var ep = { };","   var host = 'www.datasciencetoolkit.org';","","   if(this.options.host) {","        host =  this.options.host;","    }","","    ep.ipv4Endpoint = 'http://' + host + '/ip2coordinates/';","    ep.street2coordinatesEndpoint = 'http://' + host + '/street2coordinates/';","","    return net.isIPv4(value) ? ep.ipv4Endpoint : ep.street2coordinatesEndpoint;","};","","/**","* Geocode","* @param <string>   value    Value to geocode (Address or IPv4)","* @param <function> callback Callback method","*/","DataScienceToolkitGeocoder.prototype._geocode = function(value, callback) {","","    var ep = this._endpoint(value);","    this.httpAdapter.get(ep + value , { }, function(err, result) {","        if (err) {","            return callback(err);","        } else {","            result = result[value];","            if (!result) {","                return callback(new Error('Could not geocode \"' + value + '\".'));","            }","","            var results = [];","","            results.push({","                'latitude' : result.latitude,","                'longitude' : result.longitude,","                'country' : result.country_name,","                'city' : result.city || result.locality,","                'state' : result.state || result.region,","                'zipcode' : result.postal_code,","                'streetName': result.street_name,","                'streetNumber' : result.street_number,","                'countryCode' : result.country_code","            });","","            results.raw = result;","            callback(false, results);","        }","","    });","","};","","module.exports = DataScienceToolkitGeocoder;",""],"l":{"1":1,"8":1,"9":0,"10":0,"12":0,"15":1,"21":1,"22":0,"23":0,"25":0,"26":0,"29":0,"30":0,"32":0,"40":1,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"52":0,"54":0,"66":0,"67":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/openstreetmapgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/openstreetmapgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"OpenStreetMapGeocoder","line":7,"loc":{"start":{"line":7,"column":28},"end":{"line":7,"column":81}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":43},"end":{"line":24,"column":69}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":50},"end":{"line":40,"column":72}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":48},"end":{"line":67,"column":65}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":69}}},"6":{"name":"(anonymous_6)","line":114,"loc":{"start":{"line":114,"column":58},"end":{"line":114,"column":80}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":51},"end":{"line":142,"column":61}}},"8":{"name":"(anonymous_8)","line":159,"loc":{"start":{"line":159,"column":47},"end":{"line":159,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":53}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":66}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":88}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"8":{"start":{"line":24,"column":0},"end":{"line":65,"column":2}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":41}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"12":{"start":{"line":29,"column":4},"end":{"line":36,"column":5}},"13":{"start":{"line":30,"column":6},"end":{"line":30,"column":23}},"14":{"start":{"line":32,"column":6},"end":{"line":35,"column":7}},"15":{"start":{"line":33,"column":8},"end":{"line":33,"column":25}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":30}},"18":{"start":{"line":40,"column":4},"end":{"line":63,"column":7}},"19":{"start":{"line":41,"column":8},"end":{"line":61,"column":9}},"20":{"start":{"line":42,"column":12},"end":{"line":42,"column":33}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":29}},"22":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"23":{"start":{"line":48,"column":14},"end":{"line":48,"column":55}},"24":{"start":{"line":51,"column":12},"end":{"line":57,"column":13}},"25":{"start":{"line":52,"column":14},"end":{"line":54,"column":15}},"26":{"start":{"line":53,"column":16},"end":{"line":53,"column":61}},"27":{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":33}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":37}},"30":{"start":{"line":67,"column":0},"end":{"line":96,"column":2}},"31":{"start":{"line":69,"column":4},"end":{"line":69,"column":50}},"32":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"33":{"start":{"line":71,"column":8},"end":{"line":71,"column":48}},"34":{"start":{"line":74,"column":4},"end":{"line":74,"column":30}},"35":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"36":{"start":{"line":76,"column":6},"end":{"line":76,"column":38}},"37":{"start":{"line":79,"column":4},"end":{"line":79,"column":31}},"38":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"39":{"start":{"line":81,"column":6},"end":{"line":81,"column":40}},"40":{"start":{"line":84,"column":4},"end":{"line":95,"column":6}},"41":{"start":{"line":103,"column":0},"end":{"line":135,"column":2}},"42":{"start":{"line":105,"column":4},"end":{"line":105,"column":21}},"43":{"start":{"line":107,"column":4},"end":{"line":107,"column":41}},"44":{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},"45":{"start":{"line":109,"column":6},"end":{"line":109,"column":23}},"46":{"start":{"line":110,"column":6},"end":{"line":110,"column":20}},"47":{"start":{"line":112,"column":4},"end":{"line":112,"column":30}},"48":{"start":{"line":114,"column":4},"end":{"line":134,"column":7}},"49":{"start":{"line":115,"column":8},"end":{"line":133,"column":9}},"50":{"start":{"line":116,"column":12},"end":{"line":116,"column":33}},"51":{"start":{"line":118,"column":10},"end":{"line":120,"column":11}},"52":{"start":{"line":119,"column":12},"end":{"line":119,"column":53}},"53":{"start":{"line":122,"column":10},"end":{"line":122,"column":27}},"54":{"start":{"line":123,"column":10},"end":{"line":129,"column":11}},"55":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"56":{"start":{"line":125,"column":14},"end":{"line":125,"column":59}},"57":{"start":{"line":128,"column":12},"end":{"line":128,"column":54}},"58":{"start":{"line":131,"column":10},"end":{"line":131,"column":31}},"59":{"start":{"line":132,"column":10},"end":{"line":132,"column":35}},"60":{"start":{"line":142,"column":0},"end":{"line":157,"column":2}},"61":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"62":{"start":{"line":145,"column":4},"end":{"line":154,"column":5}},"63":{"start":{"line":146,"column":6},"end":{"line":146,"column":30}},"64":{"start":{"line":147,"column":6},"end":{"line":149,"column":7}},"65":{"start":{"line":148,"column":8},"end":{"line":148,"column":17}},"66":{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},"67":{"start":{"line":151,"column":8},"end":{"line":151,"column":30}},"68":{"start":{"line":153,"column":6},"end":{"line":153,"column":20}},"69":{"start":{"line":156,"column":4},"end":{"line":156,"column":18}},"70":{"start":{"line":159,"column":0},"end":{"line":162,"column":2}},"71":{"start":{"line":160,"column":4},"end":{"line":160,"column":27}},"72":{"start":{"line":161,"column":4},"end":{"line":161,"column":30}},"73":{"start":{"line":164,"column":0},"end":{"line":164,"column":39}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":17},"end":{"line":88,"column":36}},{"start":{"line":88,"column":40},"end":{"line":88,"column":59}},{"start":{"line":88,"column":63},"end":{"line":88,"column":85}},{"start":{"line":88,"column":89},"end":{"line":88,"column":110}}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":22},"end":{"line":91,"column":41}},{"start":{"line":91,"column":45},"end":{"line":91,"column":68}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":10},"end":{"line":118,"column":10}},{"start":{"line":118,"column":10},"end":{"line":118,"column":10}}]},"12":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":10},"end":{"line":123,"column":10}},{"start":{"line":123,"column":10},"end":{"line":123,"column":10}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"14":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]}},"code":["var util             = require('util'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var OpenStreetMapGeocoder = function OpenStreetMapGeocoder(httpAdapter, options) {","    this.options = ['language','email','apiKey'];","","    OpenStreetMapGeocoder.super_.call(this, httpAdapter, options);","};","","util.inherits(OpenStreetMapGeocoder, AbstractGeocoder);","","OpenStreetMapGeocoder.prototype._endpoint = 'http://nominatim.openstreetmap.org/search';","","OpenStreetMapGeocoder.prototype._endpoint_reverse = 'http://nominatim.openstreetmap.org/reverse';","","/**","* Geocode","* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://wiki.openstreetmap.org/wiki/Nominatim#Parameters)","* @param <function> callback Callback method","*/","OpenStreetMapGeocoder.prototype._geocode = function(value, callback) {","    var _this = this;","","    var params = this._getCommonParams();","    params.addressdetails = 1;","    if (typeof value == 'string') {","      params.q = value;","    } else {","      for (var k in value) {","        var v = value[k];","        params[k] = v;","      }","    }","    this._forceParams(params);","","","    this.httpAdapter.get(this._endpoint , params, function(err, result) {","        if (err) {","            return callback(err);","        } else {","","            var results = [];","","            if(result.error) {","              return callback(new Error(result.error));","            }","","            if (result instanceof Array) {","              for (var i = 0; i < result.length; i++) {","                results.push(_this._formatResult(result[i]));","              }","            } else {","              results.push(_this._formatResult(result));","            }","","            results.raw = result;","            callback(false, results);","        }","","    });","","};","","OpenStreetMapGeocoder.prototype._formatResult = function(result) {","","    var countryCode = result.address.country_code;","    if (countryCode) {","        countryCode = countryCode.toUpperCase();","    }","","    var latitude = result.lat;","    if (latitude) {","      latitude = parseFloat(latitude);","    }","","    var longitude = result.lon;","    if (longitude) {","      longitude = parseFloat(longitude);","    }","","    return {","        'latitude' : latitude,","        'longitude' : longitude,","        'country' : result.address.country,","        'city' : result.address.city || result.address.town || result.address.village || result.address.hamlet,","        'state': result.address.state,","        'zipcode' : result.address.postcode,","        'streetName': result.address.road || result.address.cycleway,","        'streetNumber' : result.address.house_number,","        'countryCode' : countryCode","","    };","};","","/**","* Reverse geocoding","* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2","* @param <function> callback Callback method","*/","OpenStreetMapGeocoder.prototype._reverse = function(query, callback) {","","    var _this = this;","","    var params = this._getCommonParams();","    for (var k in query) {","      var v = query[k];","      params[k] = v;","    }","    this._forceParams(params);","","    this.httpAdapter.get(this._endpoint_reverse , params, function(err, result) {","        if (err) {","            return callback(err);","        } else {","          if(result.error) {","            return callback(new Error(result.error));","          }","","          var results = [];","          if (result instanceof Array) {","            for (var i = 0; i < result.length; i++) {","              results.push(_this._formatResult(result[i]));","            }","          } else {","            results.push(_this._formatResult(result));","          }","","          results.raw = result;","          callback(false, results);","        }","    });","};","","/**","* Prepare common params","*","* @return <Object> common params","*/","OpenStreetMapGeocoder.prototype._getCommonParams = function(){","    var params = {};","","    for (var k in this.options) {","      var v = this.options[k];","      if (!v) {","        continue;","      }","      if (k === 'language') {","        k = 'accept-language';","      }","      params[k] = v;","    }","","    return params;","};","","OpenStreetMapGeocoder.prototype._forceParams = function(params){","    params.format = 'json';","    params.addressdetails = 1;","};","","module.exports = OpenStreetMapGeocoder;",""],"l":{"1":1,"7":1,"8":0,"10":0,"13":1,"15":1,"17":1,"24":1,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"37":0,"40":0,"41":0,"42":0,"45":0,"47":0,"48":0,"51":0,"52":0,"53":0,"56":0,"59":0,"60":0,"67":1,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"84":0,"103":1,"105":0,"107":0,"108":0,"109":0,"110":0,"112":0,"114":0,"115":0,"116":0,"118":0,"119":0,"122":0,"123":0,"124":0,"125":0,"128":0,"131":0,"132":0,"142":1,"143":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"153":0,"156":0,"159":1,"160":0,"161":0,"164":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/locationiqgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/locationiqgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"LocationIQGeocoder","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":74}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":40},"end":{"line":38,"column":66}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":32}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":64},"end":{"line":73,"column":81}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":40},"end":{"line":87,"column":66}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":66},"end":{"line":108,"column":83}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":45},"end":{"line":117,"column":62}}},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":48},"end":{"line":143,"column":59}}},"10":{"name":"(anonymous_10)","line":154,"loc":{"start":{"line":154,"column":44},"end":{"line":154,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":51}},"2":{"start":{"line":15,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":52}},"4":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":58}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":45}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":68}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":105}},"10":{"start":{"line":38,"column":0},"end":{"line":80,"column":2}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":39}},"12":{"start":{"line":41,"column":2},"end":{"line":60,"column":3}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":21}},"14":{"start":{"line":44,"column":4},"end":{"line":59,"column":5}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":23}},"16":{"start":{"line":46,"column":6},"end":{"line":58,"column":7}},"17":{"start":{"line":48,"column":10},"end":{"line":48,"column":24}},"18":{"start":{"line":49,"column":10},"end":{"line":49,"column":16}},"19":{"start":{"line":52,"column":10},"end":{"line":52,"column":32}},"20":{"start":{"line":53,"column":10},"end":{"line":53,"column":16}},"21":{"start":{"line":56,"column":10},"end":{"line":56,"column":28}},"22":{"start":{"line":57,"column":10},"end":{"line":57,"column":16}},"23":{"start":{"line":61,"column":2},"end":{"line":61,"column":28}},"24":{"start":{"line":63,"column":2},"end":{"line":79,"column":18}},"25":{"start":{"line":65,"column":6},"end":{"line":67,"column":7}},"26":{"start":{"line":66,"column":8},"end":{"line":66,"column":29}},"27":{"start":{"line":73,"column":6},"end":{"line":75,"column":9}},"28":{"start":{"line":74,"column":8},"end":{"line":74,"column":51}},"29":{"start":{"line":76,"column":6},"end":{"line":76,"column":33}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":31}},"31":{"start":{"line":87,"column":0},"end":{"line":115,"column":2}},"32":{"start":{"line":88,"column":2},"end":{"line":88,"column":39}},"33":{"start":{"line":90,"column":2},"end":{"line":93,"column":3}},"34":{"start":{"line":91,"column":4},"end":{"line":91,"column":21}},"35":{"start":{"line":92,"column":4},"end":{"line":92,"column":18}},"36":{"start":{"line":94,"column":2},"end":{"line":94,"column":28}},"37":{"start":{"line":96,"column":2},"end":{"line":114,"column":18}},"38":{"start":{"line":98,"column":6},"end":{"line":100,"column":7}},"39":{"start":{"line":99,"column":8},"end":{"line":99,"column":29}},"40":{"start":{"line":108,"column":6},"end":{"line":110,"column":9}},"41":{"start":{"line":109,"column":8},"end":{"line":109,"column":51}},"42":{"start":{"line":111,"column":6},"end":{"line":111,"column":33}},"43":{"start":{"line":113,"column":6},"end":{"line":113,"column":31}},"44":{"start":{"line":117,"column":0},"end":{"line":136,"column":2}},"45":{"start":{"line":119,"column":2},"end":{"line":122,"column":4}},"46":{"start":{"line":124,"column":2},"end":{"line":134,"column":3}},"47":{"start":{"line":125,"column":4},"end":{"line":125,"column":55}},"48":{"start":{"line":126,"column":4},"end":{"line":126,"column":55}},"49":{"start":{"line":127,"column":4},"end":{"line":127,"column":123}},"50":{"start":{"line":128,"column":4},"end":{"line":128,"column":51}},"51":{"start":{"line":129,"column":4},"end":{"line":129,"column":56}},"52":{"start":{"line":130,"column":4},"end":{"line":130,"column":82}},"53":{"start":{"line":131,"column":4},"end":{"line":131,"column":65}},"54":{"start":{"line":133,"column":4},"end":{"line":133,"column":78}},"55":{"start":{"line":135,"column":2},"end":{"line":135,"column":27}},"56":{"start":{"line":143,"column":0},"end":{"line":147,"column":2}},"57":{"start":{"line":144,"column":2},"end":{"line":146,"column":4}},"58":{"start":{"line":154,"column":0},"end":{"line":157,"column":2}},"59":{"start":{"line":155,"column":2},"end":{"line":155,"column":25}},"60":{"start":{"line":156,"column":2},"end":{"line":156,"column":30}},"61":{"start":{"line":160,"column":0},"end":{"line":160,"column":36}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":13}},{"start":{"line":19,"column":17},"end":{"line":19,"column":38}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":46,"type":"switch","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":16}},{"start":{"line":51,"column":8},"end":{"line":53,"column":16}},{"start":{"line":55,"column":8},"end":{"line":57,"column":16}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":15},"end":{"line":74,"column":31}},{"start":{"line":74,"column":35},"end":{"line":74,"column":50}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"8":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":15},"end":{"line":109,"column":31}},{"start":{"line":109,"column":35},"end":{"line":109,"column":50}}]},"9":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":30},"end":{"line":120,"column":52}},{"start":{"line":120,"column":55},"end":{"line":120,"column":64}}]},"10":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":31},"end":{"line":121,"column":53}},{"start":{"line":121,"column":56},"end":{"line":121,"column":65}}]},"11":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":29},"end":{"line":127,"column":48}},{"start":{"line":127,"column":52},"end":{"line":127,"column":71}},{"start":{"line":127,"column":75},"end":{"line":127,"column":97}},{"start":{"line":127,"column":101},"end":{"line":127,"column":122}}]},"13":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":35},"end":{"line":130,"column":54}},{"start":{"line":130,"column":58},"end":{"line":130,"column":81}}]}},"code":["var","  querystring      = require('querystring'),","  util             = require('util'),","  AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," *"," * Geocoder for LocationIQ"," * http://locationiq.org/#docs"," *"," * @param {[type]} httpAdapter [description]"," * @param {String} apiKey      [description]"," */","var LocationIQGeocoder = function LocationIQGeocoder(httpAdapter, apiKey) {","","  LocationIQGeocoder.super_.call(this, httpAdapter);","","  if (!apiKey || apiKey == 'undefined') {","    throw new Error('LocationIQGeocoder needs an apiKey');","  }","","  this.apiKey = querystring.unescape(apiKey);","};","","util.inherits(LocationIQGeocoder, AbstractGeocoder);","","LocationIQGeocoder.prototype._endpoint = 'http://locationiq.org/v1';","LocationIQGeocoder.prototype._endpoint_reverse = 'http://osm1.unwiredlabs.com/locationiq/v1/reverse.php';","","/**"," * Geocode"," * @param  {string|object}   value"," *   Value to geocode (Adress String or parameters as specified over at"," *   http://locationiq.org/#docs)"," * @param  {Function} callback callback method"," */","LocationIQGeocoder.prototype._geocode = function(value, callback) {","  var params = this._getCommonParams();","","  if (typeof value === 'string') {","    params.q = value;","  } else {","    for (var k in value) {","      var v = value[k];","      switch(k) {","        default:","          params[k] = v;","          break;","        // alias for postalcode","        case 'zipcode':","          params.postalcode = v;","          break;","        // alias for street","        case 'address':","          params.street = v;","          break;","      }","    }","  }","  this._forceParams(params);","","  this.httpAdapter.get(this._endpoint + '/search.php', params,","    function(err, responseData) {","      if (err) {","        return callback(err);","      }","","      // when there’s no err thrown here the resulting array object always","      // seemes to be defined but empty so no need to check for","      // responseData.error for now","","      var results = responseData.map(this._formatResult).filter(function(result) {","        return result.longitude && result.latitude;","      });","      results.raw = responseData;","","      callback(false, results);","    }.bind(this));","};","","/**"," * Reverse geocoding"," * @param  {lat:<number>,lon<number>}   query    lat: Latitude, lon: Longitutde and additional parameters as specified here: http://locationiq.org/#docs"," * @param  {Function} callback Callback method"," */","LocationIQGeocoder.prototype._reverse = function(query, callback) {","  var params = this._getCommonParams();","","  for (var k in query) {","    var v = query[k];","    params[k] = v;","  }","  this._forceParams(params);","","  this.httpAdapter.get(this._endpoint_reverse, params,","    function(err, responseData) {","      if (err) {","        return callback(err);","      }","","      // when there’s no err thrown here the resulting array object always","      // seemes to be defined but empty so no need to check for","      // responseData.error for now","","      // locationiq always seemes to answer with a single object instead","      // of an array","      var results = [responseData].map(this._formatResult).filter(function(result) {","        return result.longitude && result.latitude;","      });","      results.raw = responseData;","","      callback(false, results);","    }.bind(this));","};","","LocationIQGeocoder.prototype._formatResult = function(result) {","  // transform lat and lon to real floats","  var transformedResult = {","    'latitude' : result.lat ? parseFloat(result.lat) : undefined,","    'longitude' : result.lon ? parseFloat(result.lon) : undefined","  };","","  if (result.address) {","    transformedResult.country = result.address.country;","    transformedResult.country = result.address.country;","    transformedResult.city = result.address.city || result.address.town || result.address.village || result.address.hamlet;","    transformedResult.state = result.address.state;","    transformedResult.zipcode = result.address.postcode;","    transformedResult.streetName = result.address.road || result.address.cycleway;","    transformedResult.streetNumber = result.address.house_number;","    // make sure countrycode is always uppercase to keep node-geocoder api formats","    transformedResult.countryCode = result.address.country_code.toUpperCase();","  }","  return transformedResult;","};","","/**","* Prepare common params","*","* @return <Object> common params","*/","LocationIQGeocoder.prototype._getCommonParams = function() {","  return {","    'key': this.apiKey","  };","};","","/**"," * Adds parameters that are enforced"," *"," * @param  {object} params object containing the parameters"," */","LocationIQGeocoder.prototype._forceParams = function(params) {","  params.format = 'json';","  params.addressdetails = '1';","};","","","module.exports = LocationIQGeocoder;",""],"l":{"1":1,"15":1,"17":0,"19":0,"20":0,"23":0,"26":1,"28":1,"29":1,"38":1,"39":0,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"52":0,"53":0,"56":0,"57":0,"61":0,"63":0,"65":0,"66":0,"73":0,"74":0,"76":0,"78":0,"87":1,"88":0,"90":0,"91":0,"92":0,"94":0,"96":0,"98":0,"99":0,"108":0,"109":0,"111":0,"113":0,"117":1,"119":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"133":0,"135":0,"143":1,"144":0,"154":1,"155":0,"156":0,"160":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/mapquestgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/mapquestgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"MapQuestGeocoder","line":8,"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":70}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":38},"end":{"line":29,"column":64}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":61},"end":{"line":49,"column":83}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":43},"end":{"line":73,"column":60}}},"5":{"name":"(anonymous_5)","line":92,"loc":{"start":{"line":92,"column":38},"end":{"line":92,"column":64}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":129},"end":{"line":98,"column":151}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"4":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":56}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":81}},"9":{"start":{"line":29,"column":0},"end":{"line":71,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":59}},"11":{"start":{"line":31,"column":2},"end":{"line":46,"column":3}},"12":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":36}},"14":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"15":{"start":{"line":36,"column":6},"end":{"line":36,"column":37}},"16":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":39,"column":6},"end":{"line":39,"column":40}},"18":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":31}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":28}},"21":{"start":{"line":48,"column":2},"end":{"line":48,"column":19}},"22":{"start":{"line":49,"column":2},"end":{"line":70,"column":5}},"23":{"start":{"line":50,"column":4},"end":{"line":69,"column":5}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":29}},"25":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":119}},"27":{"start":{"line":57,"column":6},"end":{"line":57,"column":23}},"28":{"start":{"line":58,"column":6},"end":{"line":64,"column":7}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":52}},"30":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"31":{"start":{"line":62,"column":10},"end":{"line":62,"column":58}},"32":{"start":{"line":66,"column":6},"end":{"line":66,"column":27}},"33":{"start":{"line":68,"column":6},"end":{"line":68,"column":31}},"34":{"start":{"line":73,"column":0},"end":{"line":85,"column":2}},"35":{"start":{"line":74,"column":2},"end":{"line":84,"column":4}},"36":{"start":{"line":92,"column":0},"end":{"line":114,"column":2}},"37":{"start":{"line":93,"column":2},"end":{"line":93,"column":22}},"38":{"start":{"line":94,"column":2},"end":{"line":94,"column":22}},"39":{"start":{"line":96,"column":2},"end":{"line":96,"column":19}},"40":{"start":{"line":98,"column":2},"end":{"line":113,"column":5}},"41":{"start":{"line":99,"column":4},"end":{"line":112,"column":5}},"42":{"start":{"line":100,"column":6},"end":{"line":100,"column":27}},"43":{"start":{"line":102,"column":6},"end":{"line":102,"column":23}},"44":{"start":{"line":104,"column":6},"end":{"line":104,"column":50}},"45":{"start":{"line":106,"column":6},"end":{"line":108,"column":7}},"46":{"start":{"line":107,"column":8},"end":{"line":107,"column":56}},"47":{"start":{"line":110,"column":6},"end":{"line":110,"column":27}},"48":{"start":{"line":111,"column":6},"end":{"line":111,"column":31}},"49":{"start":{"line":116,"column":0},"end":{"line":116,"column":34}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":13}},{"start":{"line":12,"column":17},"end":{"line":12,"column":38}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"10":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"11":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":24}},{"start":{"line":58,"column":28},"end":{"line":58,"column":49}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]}},"code":["var querystring      = require('querystring'),","    util             = require('util'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var MapQuestGeocoder = function MapQuestGeocoder(httpAdapter, apiKey) {","","  MapQuestGeocoder.super_.call(this, httpAdapter);","","  if (!apiKey || apiKey == 'undefined') {","","    throw new Error('MapQuestGeocoder needs an apiKey');","  }","","  this.apiKey = apiKey;","};","","util.inherits(MapQuestGeocoder, AbstractGeocoder);","","MapQuestGeocoder.prototype._endpoint = 'http://www.mapquestapi.com/geocoding/v1';","","/**","* Geocode","* @param <string>   value    Value to geocode (Address)","* @param <function> callback Callback method","*/","MapQuestGeocoder.prototype._geocode = function(value, callback) {","  var params = {'key' : querystring.unescape(this.apiKey)};","  if (typeof value === 'object') {","    if (value.address) {","      params.street = value.address;","    }","    if (value.country) {","      params.country = value.country;","    }","    if (value.zipcode) {","      params.postalCode = value.zipcode;","    }","    if (value.city) {","      params.city = value.city;","    }","  } else {","    params.location = value;","  }","","  var _this = this;","  this.httpAdapter.get(this._endpoint + '/address' , params, function(err, result) {","    if (err) {","        return callback(err);","    } else {","      if (result.info.statuscode !== 0) {","        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]),{raw:result});","      }","","      var results = [];","      if (result.results && result.results.length) {","        var locations = result.results[0].locations;","","        for(var i = 0; i < locations.length; i++) {","          results.push(_this._formatResult(locations[i]));","        }","      }","","      results.raw = result;","","      callback(false, results);","    }","  });","};","","MapQuestGeocoder.prototype._formatResult = function(result) {","  return {","    'latitude' : result.latLng.lat,","    'longitude' : result.latLng.lng,","    'country' : null,","    'city' : result.adminArea5,","    'stateCode' : result.adminArea3,","    'zipcode' : result.postalCode,","    'streetName': result.street,","    'streetNumber' : null,","    'countryCode' : result.adminArea1","  };","};","","/**","* Reverse geocoding","* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude","* @param <function> callback Callback method","*/","MapQuestGeocoder.prototype._reverse = function(query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","","  this.httpAdapter.get(this._endpoint + '/reverse' , { 'location' : lat + ',' + lng, 'key' : querystring.unescape(this.apiKey)}, function(err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","","      var locations = result.results[0].locations;","","      for(var i = 0; i < locations.length; i++) {","        results.push(_this._formatResult(locations[i]));","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","module.exports = MapQuestGeocoder;",""],"l":{"1":1,"8":1,"10":0,"12":0,"14":0,"17":0,"20":1,"22":1,"29":1,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"45":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"57":0,"58":0,"59":0,"61":0,"62":0,"66":0,"68":0,"73":1,"74":0,"92":1,"93":0,"94":0,"96":0,"98":0,"99":0,"100":0,"102":0,"104":0,"106":0,"107":0,"110":0,"111":0,"116":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/openmapquestgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/openmapquestgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"OpenMapQuestGeocoder","line":8,"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":74}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":38},"end":{"line":28,"column":65}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":28}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":43},"end":{"line":55,"column":61}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":38},"end":{"line":91,"column":65}}},"6":{"name":"(anonymous_6)","line":100,"loc":{"start":{"line":100,"column":5},"end":{"line":100,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":8,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"4":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":64}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":62}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}},"9":{"start":{"line":28,"column":0},"end":{"line":53,"column":2}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"11":{"start":{"line":30,"column":2},"end":{"line":52,"column":5}},"12":{"start":{"line":34,"column":4},"end":{"line":51,"column":5}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":27}},"14":{"start":{"line":37,"column":6},"end":{"line":39,"column":7}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":121}},"16":{"start":{"line":41,"column":6},"end":{"line":41,"column":23}},"17":{"start":{"line":43,"column":6},"end":{"line":43,"column":50}},"18":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":56}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":27}},"21":{"start":{"line":50,"column":6},"end":{"line":50,"column":31}},"22":{"start":{"line":55,"column":0},"end":{"line":84,"column":2}},"23":{"start":{"line":56,"column":2},"end":{"line":68,"column":4}},"24":{"start":{"line":69,"column":2},"end":{"line":83,"column":4}},"25":{"start":{"line":91,"column":0},"end":{"line":121,"column":2}},"26":{"start":{"line":92,"column":2},"end":{"line":92,"column":22}},"27":{"start":{"line":93,"column":2},"end":{"line":93,"column":22}},"28":{"start":{"line":95,"column":2},"end":{"line":95,"column":19}},"29":{"start":{"line":97,"column":2},"end":{"line":120,"column":5}},"30":{"start":{"line":101,"column":4},"end":{"line":119,"column":5}},"31":{"start":{"line":102,"column":6},"end":{"line":102,"column":27}},"32":{"start":{"line":104,"column":6},"end":{"line":104,"column":23}},"33":{"start":{"line":105,"column":6},"end":{"line":105,"column":20}},"34":{"start":{"line":107,"column":6},"end":{"line":109,"column":7}},"35":{"start":{"line":108,"column":10},"end":{"line":108,"column":59}},"36":{"start":{"line":111,"column":6},"end":{"line":111,"column":46}},"37":{"start":{"line":113,"column":6},"end":{"line":115,"column":7}},"38":{"start":{"line":114,"column":8},"end":{"line":114,"column":56}},"39":{"start":{"line":117,"column":6},"end":{"line":117,"column":27}},"40":{"start":{"line":118,"column":6},"end":{"line":118,"column":31}},"41":{"start":{"line":123,"column":0},"end":{"line":123,"column":34}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":13}},{"start":{"line":12,"column":17},"end":{"line":12,"column":38}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":18},"end":{"line":80,"column":59}},{"start":{"line":80,"column":63},"end":{"line":80,"column":64}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"7":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"8":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":10},"end":{"line":107,"column":38}},{"start":{"line":107,"column":42},"end":{"line":107,"column":64}}]}},"code":["var querystring = require('querystring'),","  util = require('util'),","  AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var MapQuestGeocoder = function OpenMapQuestGeocoder(httpAdapter, apiKey) {","","  MapQuestGeocoder.super_.call(this, httpAdapter);","","  if (!apiKey || apiKey == 'undefined') {","","    throw new Error(this.constructor.name + ' needs an apiKey');","  }","","  this.apiKey = apiKey;","  this._endpoint = 'http://open.mapquestapi.com/geocoding/v1';","};","","util.inherits(MapQuestGeocoder, AbstractGeocoder);","","/**"," * Geocode"," * @param <string>   value    Value to geocode (Address)"," * @param <function> callback Callback method"," */","MapQuestGeocoder.prototype._geocode = function (value, callback) {","  var _this = this;","  this.httpAdapter.get(this._endpoint + '/address', {","    'location': value,","    'key': querystring.unescape(this.apiKey)","  }, function (err, result) {","    if (err) {","      return callback(err);","    } else {","      if (result.info.statuscode !== 0) {","        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]), {raw: result});","      }","","      var results = [];","","      var locations = result.results[0].locations;","","      for (var i = 0; i < locations.length; i++) {","        results.push(_this._formatResult(locations[i]));","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","MapQuestGeocoder.prototype._formatResult = function (result) {","  var MQConfidenceLookup = {","    POINT: 1,","    ADDRESS: 0.9,","    INTERSECTION: 0.8, //less accurate than the MQ description","    STREET: 0.7,","    ZIP: 0.5,","    ZIP_EXTENDED: 0.5,","    NEIGHBORHOOD: 0.5,","    CITY: 0.4,","    COUNTY: 0.3,","    STATE: 0.2,","    COUNTRY: 0.1","  };","  return {","    'latitude': result.latLng.lat,","    'longitude': result.latLng.lng,","    'country': null,","    'countryCode': result.adminArea1,","    'city': result.adminArea5,","    'state': result.adminArea3,","    'zipcode': result.postalCode,","    'streetName': result.street,","    'streetNumber': null,","    'extra': {","      confidence: MQConfidenceLookup[result.geocodeQuality] || 0","    }","","  };","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback Callback method"," */","MapQuestGeocoder.prototype._reverse = function (query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","","  this.httpAdapter.get(this._endpoint + '/reverse', {","    'location': lat + ',' + lng,","    'key': querystring.unescape(this.apiKey)","  }, function (err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","      var locations;","","      if (result.results === undefined || !result.results.length) {","          return callback(new Error('Incorrect response'));","      }","","      locations = result.results[0].locations;","","      for (var i = 0; i < locations.length; i++) {","        results.push(_this._formatResult(locations[i]));","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","module.exports = MapQuestGeocoder;",""],"l":{"1":1,"8":1,"10":0,"12":0,"14":0,"17":0,"18":0,"21":1,"28":1,"29":0,"30":0,"34":0,"35":0,"37":0,"38":0,"41":0,"43":0,"45":0,"46":0,"49":0,"50":0,"55":1,"56":0,"69":0,"91":1,"92":0,"93":0,"95":0,"97":0,"101":0,"102":0,"104":0,"105":0,"107":0,"108":0,"111":0,"113":0,"114":0,"117":0,"118":0,"123":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"YandexGeocoder","line":11,"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":67}}},"2":{"name":"_findKey","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":28},"end":{"line":19,"column":42}}},"4":{"name":"_formatResult","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":36},"end":{"line":62,"column":62}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":47},"end":{"line":72,"column":69}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":64},"end":{"line":78,"column":83}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":57}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}},"6":{"start":{"line":17,"column":0},"end":{"line":36,"column":1}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":17}},"8":{"start":{"line":19,"column":2},"end":{"line":33,"column":5}},"9":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":22}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"12":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":43}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":39}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}},"17":{"start":{"line":38,"column":0},"end":{"line":52,"column":1}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":55}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":77}},"20":{"start":{"line":42,"column":2},"end":{"line":51,"column":4}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":75}},"22":{"start":{"line":62,"column":0},"end":{"line":86,"column":2}},"23":{"start":{"line":63,"column":2},"end":{"line":66,"column":4}},"24":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"25":{"start":{"line":69,"column":4},"end":{"line":69,"column":40}},"26":{"start":{"line":72,"column":2},"end":{"line":85,"column":5}},"27":{"start":{"line":73,"column":4},"end":{"line":84,"column":5}},"28":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"29":{"start":{"line":76,"column":6},"end":{"line":76,"column":23}},"30":{"start":{"line":78,"column":6},"end":{"line":80,"column":9}},"31":{"start":{"line":79,"column":8},"end":{"line":79,"column":46}},"32":{"start":{"line":82,"column":6},"end":{"line":82,"column":27}},"33":{"start":{"line":83,"column":6},"end":{"line":83,"column":31}},"34":{"start":{"line":88,"column":0},"end":{"line":88,"column":32}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":26},"end":{"line":29,"column":30}},{"start":{"line":29,"column":33},"end":{"line":29,"column":38}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]}},"code":["'use strict';","","var util = require('util');","var AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options (language, clientId, apiKey)"," */","var YandexGeocoder = function YandexGeocoder(httpAdapter, options) {","  YandexGeocoder.super_.call(this, httpAdapter, options);","};","","util.inherits(YandexGeocoder, AbstractGeocoder);","","function _findKey(result, wantedKey) {","  var val = null;","  Object.keys(result).every(function(key) {","","  if (key === wantedKey) {","    val = result[key];","    return false;","  }","","  if (typeof result[key] === 'object') {","    val = _findKey(result[key], wantedKey);","","    return val === null ? true : false;","  }","","  return true;","  });","","  return val;","}","","function _formatResult(result) {","  var position = result.GeoObject.Point.pos.split(' ');","  result = result.GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails;","","  return {","    'latitude' : position[0],","    'longitude' : position[1],","    'city' : _findKey(result, 'LocalityName'),","    'state' : _findKey(result, 'AdministrativeAreaName'),","    'streetName': _findKey(result, 'ThoroughfareName'),","    'streetNumber' : _findKey(result, 'PremiseNumber'),","    'countryCode' : _findKey(result, 'CountryNameCode'),","    'country' : _findKey(result, 'CountryName')","  };","}","","// Yandex geocoding API endpoint","YandexGeocoder.prototype._endpoint = 'https://geocode-maps.yandex.ru/1.x/';","","/**","* Geocode","* @param <string>   value    Value to geocode (Address)","* @param <function> callback Callback method","*/","YandexGeocoder.prototype._geocode = function(value, callback) {","  var params = {","    geocode : value,","    format: 'json'","  };","","  if (this.options.language) {","    params.lang = this.options.language;","  }","","  this.httpAdapter.get(this._endpoint, params, function(err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","","      result.response.GeoObjectCollection.featureMember.forEach(function(geopoint) {","        results.push(_formatResult(geopoint));","      });","","      results.raw = result;","      callback(false, results);","    }","  });","};","","module.exports = YandexGeocoder;",""],"l":{"3":1,"4":1,"11":1,"12":0,"15":1,"17":1,"18":0,"19":0,"21":0,"22":0,"23":0,"26":0,"27":0,"29":0,"32":0,"35":0,"38":1,"39":0,"40":0,"42":0,"55":1,"62":1,"63":0,"68":0,"69":0,"72":0,"73":0,"74":0,"76":0,"78":0,"79":0,"82":0,"83":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/geocodiogeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/geocodiogeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"GeocodioGeocoder","line":8,"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":70}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":38},"end":{"line":28,"column":65}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":28}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":43},"end":{"line":54,"column":61}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":38},"end":{"line":77,"column":65}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":5},"end":{"line":86,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":8,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"4":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":64}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":45}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}},"9":{"start":{"line":28,"column":0},"end":{"line":52,"column":2}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"11":{"start":{"line":30,"column":2},"end":{"line":51,"column":5}},"12":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":27}},"14":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"15":{"start":{"line":38,"column":6},"end":{"line":38,"column":77}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":21}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":35}},"18":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"19":{"start":{"line":46,"column":6},"end":{"line":46,"column":54}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":25}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"22":{"start":{"line":54,"column":0},"end":{"line":70,"column":2}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":67}},"24":{"start":{"line":56,"column":2},"end":{"line":69,"column":4}},"25":{"start":{"line":77,"column":0},"end":{"line":101,"column":2}},"26":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"27":{"start":{"line":79,"column":2},"end":{"line":79,"column":22}},"28":{"start":{"line":81,"column":2},"end":{"line":81,"column":19}},"29":{"start":{"line":83,"column":2},"end":{"line":100,"column":5}},"30":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"31":{"start":{"line":88,"column":6},"end":{"line":88,"column":27}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":21}},"33":{"start":{"line":92,"column":4},"end":{"line":92,"column":35}},"34":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"35":{"start":{"line":95,"column":6},"end":{"line":95,"column":54}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":25}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":29}},"38":{"start":{"line":103,"column":0},"end":{"line":103,"column":34}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":13}},{"start":{"line":12,"column":17},"end":{"line":12,"column":38}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":41},"end":{"line":55,"column":62}},{"start":{"line":55,"column":65},"end":{"line":55,"column":66}}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":18},"end":{"line":67,"column":26}},{"start":{"line":67,"column":30},"end":{"line":67,"column":31}}]},"7":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]}},"code":["var querystring = require('querystring'),","  util = require('util'),","  AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var GeocodioGeocoder = function GeocodioGeocoder(httpAdapter, apiKey) {","","  GeocodioGeocoder.super_.call(this, httpAdapter);","","  if (!apiKey || apiKey == 'undefined') {","","    throw new Error(this.constructor.name + ' needs an apiKey');","  }","","  this.apiKey = apiKey;","  this._endpoint = 'http://api.geocod.io/v1';","};","","util.inherits(GeocodioGeocoder, AbstractGeocoder);","","/**"," * Geocode"," * @param <string>   value    Value to geocode (Address)"," * @param <function> callback Callback method"," */","GeocodioGeocoder.prototype._geocode = function (value, callback) {","  var _this = this;","  this.httpAdapter.get(this._endpoint + '/geocode', {","    'q': value,","    'api_key': querystring.unescape(this.apiKey)","  }, function (err, result) {","    if (err) {","      return callback(err);","    }","    if (result.error) {","      return callback(new Error('Status is ' + result.error), {raw: result});","    }","","    var results = [];","","    var locations = result.results;","","    for (var i = 0; i < locations.length; i++) {","      results.push(_this._formatResult(locations[i]));","    }","","    results.raw = result;","    callback(false, results);","  });","};","","GeocodioGeocoder.prototype._formatResult = function (result) {","  var accuracy = (result.accuracy < 1) ? result.accuracy - 0.1 : 1;","  return {","    'latitude': result.location.lat,","    'longitude': result.location.lng,","    'country': null,","    'city': result.address_components.city,","    'state': result.address_components.state,","    'zipcode': result.address_components.zip,","    'streetName': result.address_components.formatted_street,","    'streetNumber': result.address_components.number,","    'countryCode': null,","    'extra': {","      confidence: accuracy || 0","    }","  };","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback Callback method"," */","GeocodioGeocoder.prototype._reverse = function (query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","","  this.httpAdapter.get(this._endpoint + '/reverse', {","    'q': lat + ',' + lng,","    'api_key': querystring.unescape(this.apiKey)","  }, function (err, result) {","    if (err) {","      return callback(err);","    }","","    var results = [];","    var locations = result.results;","","    for (var i = 0; i < locations.length; i++) {","      results.push(_this._formatResult(locations[i]));","    }","","    results.raw = result;","    callback(false, results);","  });","};","","module.exports = GeocodioGeocoder;",""],"l":{"1":1,"8":1,"10":0,"12":0,"14":0,"17":0,"18":0,"21":1,"28":1,"29":0,"30":0,"34":0,"35":0,"37":0,"38":0,"41":0,"43":0,"45":0,"46":0,"49":0,"50":0,"54":1,"55":0,"56":0,"77":1,"78":0,"79":0,"81":0,"83":0,"87":0,"88":0,"91":0,"92":0,"94":0,"95":0,"98":0,"99":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/opencagegeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/opencagegeocoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"OpenCageGeocoder","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":79}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":38},"end":{"line":43,"column":65}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":47},"end":{"line":71,"column":70}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":43},"end":{"line":93,"column":61}}},"5":{"name":"(anonymous_5)","line":118,"loc":{"start":{"line":118,"column":38},"end":{"line":118,"column":65}}},"6":{"name":"(anonymous_6)","line":127,"loc":{"start":{"line":127,"column":47},"end":{"line":127,"column":70}}},"7":{"name":"(anonymous_7)","line":150,"loc":{"start":{"line":150,"column":46},"end":{"line":150,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":51}},"2":{"start":{"line":5,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":30}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":59}},"6":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":64}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":65}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"12":{"start":{"line":43,"column":0},"end":{"line":91,"column":2}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":19}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":39}},"15":{"start":{"line":47,"column":2},"end":{"line":69,"column":3}},"16":{"start":{"line":48,"column":4},"end":{"line":55,"column":5}},"17":{"start":{"line":49,"column":6},"end":{"line":54,"column":7}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":47}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":37}},"20":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":45}},"22":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"23":{"start":{"line":60,"column":6},"end":{"line":60,"column":33}},"24":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"25":{"start":{"line":63,"column":6},"end":{"line":63,"column":50}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":29}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}},"28":{"start":{"line":71,"column":2},"end":{"line":89,"column":5}},"29":{"start":{"line":73,"column":4},"end":{"line":87,"column":5}},"30":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"31":{"start":{"line":77,"column":6},"end":{"line":77,"column":23}},"32":{"start":{"line":79,"column":6},"end":{"line":83,"column":7}},"33":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"34":{"start":{"line":81,"column":10},"end":{"line":81,"column":63}},"35":{"start":{"line":85,"column":6},"end":{"line":85,"column":27}},"36":{"start":{"line":86,"column":6},"end":{"line":86,"column":31}},"37":{"start":{"line":93,"column":0},"end":{"line":111,"column":2}},"38":{"start":{"line":94,"column":2},"end":{"line":94,"column":42}},"39":{"start":{"line":95,"column":2},"end":{"line":110,"column":4}},"40":{"start":{"line":118,"column":0},"end":{"line":143,"column":2}},"41":{"start":{"line":119,"column":2},"end":{"line":119,"column":22}},"42":{"start":{"line":120,"column":2},"end":{"line":120,"column":22}},"43":{"start":{"line":122,"column":2},"end":{"line":122,"column":19}},"44":{"start":{"line":124,"column":2},"end":{"line":124,"column":39}},"45":{"start":{"line":125,"column":2},"end":{"line":125,"column":29}},"46":{"start":{"line":127,"column":2},"end":{"line":142,"column":5}},"47":{"start":{"line":128,"column":4},"end":{"line":141,"column":5}},"48":{"start":{"line":129,"column":6},"end":{"line":129,"column":20}},"49":{"start":{"line":131,"column":6},"end":{"line":131,"column":23}},"50":{"start":{"line":133,"column":6},"end":{"line":137,"column":7}},"51":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"52":{"start":{"line":135,"column":10},"end":{"line":135,"column":63}},"53":{"start":{"line":139,"column":6},"end":{"line":139,"column":27}},"54":{"start":{"line":140,"column":6},"end":{"line":140,"column":31}},"55":{"start":{"line":150,"column":0},"end":{"line":159,"column":2}},"56":{"start":{"line":151,"column":2},"end":{"line":151,"column":18}},"57":{"start":{"line":152,"column":2},"end":{"line":152,"column":27}},"58":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"59":{"start":{"line":155,"column":4},"end":{"line":155,"column":44}},"60":{"start":{"line":158,"column":2},"end":{"line":158,"column":16}},"61":{"start":{"line":161,"column":0},"end":{"line":161,"column":34}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":13}},{"start":{"line":27,"column":17},"end":{"line":27,"column":38}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"9":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"10":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":10},"end":{"line":79,"column":16}},{"start":{"line":79,"column":20},"end":{"line":79,"column":51}}]},"12":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":19},"end":{"line":94,"column":36}},{"start":{"line":94,"column":40},"end":{"line":94,"column":41}}]},"13":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":20},"end":{"line":108,"column":59}},{"start":{"line":108,"column":63},"end":{"line":108,"column":73}}]},"14":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"15":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"16":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":10},"end":{"line":133,"column":16}},{"start":{"line":133,"column":20},"end":{"line":133,"column":51}}]},"17":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]}},"code":["var util = require('util'),","  AbstractGeocoder = require('./abstractgeocoder');","","// http://geocoder.opencagedata.com/api.html#confidence","var ConfidenceInKM = {","  10: 0.25,","  9: 0.5,","  8: 1,","  7: 5,","  6: 7.5,","  5: 10,","  4: 15,","  3: 20,","  2: 25,","  1: Number.POSITIVE_INFINITY,","  0: Number.NaN","};","","/**"," * Constructor"," */","var OpenCageGeocoder = function OpenCageGeocoder(httpAdapter, apiKey, options) {","  this.options = ['language'];","","  OpenCageGeocoder.super_.call(this, httpAdapter, options);","","  if (!apiKey || apiKey == 'undefined') {","    throw new Error(this.constructor.name + ' needs an apiKey');","  }","","  this.apiKey = apiKey;","  this._endpoint = 'http://api.opencagedata.com/geocode/v1/json';","  this._ConfidenceInKM = ConfidenceInKM; // In case we need to support v1/v2 and this changes","};","","util.inherits(OpenCageGeocoder, AbstractGeocoder);","","/**"," * Geocode"," * @param <string>   value    Value to geocode (Address)"," * @param <function> callback Callback method"," */","OpenCageGeocoder.prototype._geocode = function (value, callback) {","  var _this = this;","","  var params = this._getCommonParams();","  if (value.address) {","    if (value.bounds) {","      if (Array.isArray(value.bounds)) {","        params.bounds = value.bounds.join(',');","      }","      else {","        params.bounds = value.bounds;","      }","    }","    if (value.countryCode) {","      params.countrycode = value.countryCode;","    }","    if (value.limit) {","      params.limit = value.limit;","    }","    if (value.minConfidence) {","      params.min_confidence = value.minConfidence;","    }","    params.q = value.address;","  }","  else {","    params.q = value;","  }","","  this.httpAdapter.get(this._endpoint, params, function (err, result) {","","    if (err) {","      return callback(err);","    } else {","","      var results = [];","","      if (result && result.results instanceof Array) {","        for (var i = 0; i < result.results.length; i++) {","          results.push(_this._formatResult(result.results[i]));","        }","      }","","      results.raw = result;","      callback(false, results);","    }","","  });","","};","","OpenCageGeocoder.prototype._formatResult = function (result) {","  var confidence = result.confidence || 0;","  return {","    'latitude': result.geometry.lat,","    'longitude': result.geometry.lng,","    'country': result.components.country,","    'city': result.components.city,","    'state': result.components.state,","    'zipcode': result.components.postcode,","    'streetName': result.components.road,","    'streetNumber': result.components.house_number,","    'countryCode': result.components.country_code,","    'county': result.components.county,","    'extra': {","      confidence: confidence,","      confidenceKM: this._ConfidenceInKM[result.confidence] || Number.NaN","    }","  };","};","","/**"," * Reverse geocoding"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback Callback method"," */","OpenCageGeocoder.prototype._reverse = function (query, callback) {","  var lat = query.lat;","  var lng = query.lon;","","  var _this = this;","","  var params = this._getCommonParams();","  params.q = lat + ' ' + lng;","","  this.httpAdapter.get(this._endpoint, params, function (err, result) {","    if (err) {","      callback(err);","    } else {","      var results = [];","","      if (result && result.results instanceof Array) {","        for (var i = 0; i < result.results.length; i++) {","          results.push(_this._formatResult(result.results[i]));","        }","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","/**"," * Prepare common params"," *"," * @return <Object> common params"," */","OpenCageGeocoder.prototype._getCommonParams = function () {","  var params = {};","  params.key = this.apiKey;","","  if (this.options.language) {","    params.language = this.options.language;","  }","","  return params;","};","","module.exports = OpenCageGeocoder;",""],"l":{"1":1,"5":1,"22":1,"23":0,"25":0,"27":0,"28":0,"31":0,"32":0,"33":0,"36":1,"43":1,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"65":0,"68":0,"71":0,"73":0,"74":0,"77":0,"79":0,"80":0,"81":0,"85":0,"86":0,"93":1,"94":0,"95":0,"118":1,"119":0,"120":0,"122":0,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"133":0,"134":0,"135":0,"139":0,"140":0,"150":1,"151":0,"152":0,"154":0,"155":0,"158":0,"161":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/nominatimmapquestgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/nominatimmapquestgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"NominatimMapquestGeocoder","line":7,"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":89}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":63}},"2":{"start":{"line":7,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":70}},"4":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":11,"column":6},"end":{"line":11,"column":66}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":43}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":64}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":98}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":107}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":28}},{"start":{"line":10,"column":32},"end":{"line":10,"column":66}}]}},"code":["var util                  = require('util'),","    OpenStreetMapGeocoder = require('./openstreetmapgeocoder');","","/**"," * Constructor"," */","var NominatimMapquestGeocoder = function NominatimMapquestGeocoder(httpAdapter, options) {","    NominatimMapquestGeocoder.super_.call(this, httpAdapter, options);","","    if (!this.options.apiKey || this.options.apiKey == 'undefined') {","      throw new Error(this.constructor.name + ' needs an apiKey');","    }","    this.options.key = this.options.apiKey;","    delete this.options.apiKey;","};","","util.inherits(NominatimMapquestGeocoder, OpenStreetMapGeocoder);","","NominatimMapquestGeocoder.prototype._endpoint = 'http://open.mapquestapi.com/nominatim/v1/search';","NominatimMapquestGeocoder.prototype._endpoint_reverse = 'http://open.mapquestapi.com/nominatim/v1/reverse';","","","module.exports = NominatimMapquestGeocoder;",""],"l":{"1":1,"7":1,"8":0,"10":0,"11":0,"13":0,"14":0,"17":1,"19":1,"20":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/tomtomgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/tomtomgeocoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"TomTomGeocoder","line":9,"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":67}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":36},"end":{"line":28,"column":62}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":47},"end":{"line":38,"column":69}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":41},"end":{"line":54,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":9,"column":0},"end":{"line":16,"column":2}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":57}},"5":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":50}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"9":{"start":{"line":28,"column":0},"end":{"line":52,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"11":{"start":{"line":32,"column":2},"end":{"line":36,"column":4}},"12":{"start":{"line":38,"column":2},"end":{"line":51,"column":5}},"13":{"start":{"line":39,"column":4},"end":{"line":50,"column":5}},"14":{"start":{"line":40,"column":6},"end":{"line":40,"column":27}},"15":{"start":{"line":42,"column":6},"end":{"line":42,"column":23}},"16":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"17":{"start":{"line":45,"column":10},"end":{"line":45,"column":77}},"18":{"start":{"line":48,"column":6},"end":{"line":48,"column":27}},"19":{"start":{"line":49,"column":6},"end":{"line":49,"column":31}},"20":{"start":{"line":54,"column":0},"end":{"line":66,"column":2}},"21":{"start":{"line":55,"column":2},"end":{"line":65,"column":4}},"22":{"start":{"line":68,"column":0},"end":{"line":68,"column":32}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":26}},{"start":{"line":13,"column":30},"end":{"line":13,"column":64}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]}},"code":["var util = require('util');","var AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options (language, clientId, apiKey)"," */","var TomTomGeocoder = function TomTomGeocoder(httpAdapter, options) {","","  TomTomGeocoder.super_.call(this, httpAdapter, options);","","  if (!this.options.apiKey || this.options.apiKey == 'undefined') {","    throw new Error('You must specify an apiKey');","  }","};","","util.inherits(TomTomGeocoder, AbstractGeocoder);","","// TomTom geocoding API endpoint","TomTomGeocoder.prototype._endpoint = 'http://api.tomtom.com/lbs/geocoding/geocode';","","/**","* Geocode","* @param <string>   value    Value to geocode (Address)","* @param <function> callback Callback method","*/","TomTomGeocoder.prototype._geocode = function(value, callback) {","","  var _this = this;","","  var params = {","    query : value,","    key   : this.options.apiKey,","    format: 'json'","  };","","  this.httpAdapter.get(this._endpoint, params, function(err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","","      for(var i = 0; i < result.geoResponse.geoResult.length; i++) {","          results.push(_this._formatResult(result.geoResponse.geoResult[i]));","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","TomTomGeocoder.prototype._formatResult = function(result) {","  return {","    'latitude' : result.latitude,","    'longitude' : result.longitude,","    'country' : result.country,","    'city' : result.city,","    'state' : result.state,","    'zipcode' : result.postcode,","    'streetName': result.street,","    'streetNumber' : result.houseNumber,","    'countryCode' : result.countryISO3","  };","};","","module.exports = TomTomGeocoder;",""],"l":{"1":1,"2":1,"9":1,"11":0,"13":0,"14":0,"18":1,"21":1,"28":1,"30":0,"32":0,"38":0,"39":0,"40":0,"42":0,"44":0,"45":0,"48":0,"49":0,"54":1,"55":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/smartystreetsgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/smartystreetsgeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"SmartyStreets","line":9,"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":77}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":34},"end":{"line":30,"column":63}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":40},"end":{"line":41,"column":57}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":34},"end":{"line":64,"column":60}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":47},"end":{"line":74,"column":68}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":53}},"2":{"start":{"line":9,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":49}},"4":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"5":{"start":{"line":13,"column":6},"end":{"line":13,"column":69}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":33}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":83}},"10":{"start":{"line":30,"column":0},"end":{"line":36,"column":2}},"11":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":86}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":45}},"14":{"start":{"line":41,"column":0},"end":{"line":57,"column":2}},"15":{"start":{"line":42,"column":2},"end":{"line":56,"column":3}},"16":{"start":{"line":43,"column":6},"end":{"line":55,"column":9}},"17":{"start":{"line":64,"column":0},"end":{"line":88,"column":2}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":21}},"19":{"start":{"line":67,"column":4},"end":{"line":72,"column":6}},"20":{"start":{"line":74,"column":4},"end":{"line":87,"column":7}},"21":{"start":{"line":75,"column":6},"end":{"line":86,"column":7}},"22":{"start":{"line":76,"column":8},"end":{"line":76,"column":29}},"23":{"start":{"line":78,"column":8},"end":{"line":78,"column":25}},"24":{"start":{"line":80,"column":8},"end":{"line":82,"column":11}},"25":{"start":{"line":81,"column":10},"end":{"line":81,"column":52}},"26":{"start":{"line":84,"column":8},"end":{"line":84,"column":29}},"27":{"start":{"line":85,"column":8},"end":{"line":85,"column":33}},"28":{"start":{"line":90,"column":0},"end":{"line":90,"column":31}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":7},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":30}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"5":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]}},"code":["var util             = require('util'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * SmartyStreets Constructor"," * @param <object> httpAdapter Http Adapter"," * @param <object> options     Options"," */","var SmartyStreets = function SmartyStreets(httpAdapter, auth_id, auth_token) {","    SmartyStreets.super_.call(this, httpAdapter);","","    if(!auth_id && !auth_token){","      throw new Error('You must specify an auth-id and auth-token!');","    }","","    this.auth_id = auth_id;","    this.auth_token = auth_token;","};","","util.inherits(SmartyStreets, AbstractGeocoder);","","SmartyStreets.prototype._endpoint = 'https://api.smartystreets.com/street-address';","","/**","* Reverse geocoding","* @param <integer>  lat      Latittude","* @param <integer>  lng      Longitude","* @param <function> callback Callback method","*/","SmartyStreets.prototype.reverse = function(lat, lng, callback) {","    if (typeof this._reverse != 'function') {","        throw new Error(this.constructor.name + ' doesnt support reverse geocoding!');","    }","","    return this._reverse(lat, lng, callback);","};","","/**"," * Format Result"," **/","SmartyStreets.prototype._formatResult = function(result) {","  if(result){","      return [{","        'latitude' : result.metadata.latitude,","        'longitude' : result.metadata.longitude,","        'country' : null,","        'city' : result.components.city_name,","        'zipcode' : result.components.zipcode,","        'streetName' : result.components.street_name + ' ' + result.components.street_suffix,","        'streetNumber' : result.components.primary_number,","        'countryCode' : null,","        'type' : result.metadata.record_type,","        'dpv_match' : result.analysis.dpv_match_code,","        'dpv_footnotes' : result.analysis.dpv_footnotes","      }];","  }","};","","/**","* Geocode","* @param <string>   value    Value to geocode","* @param <function> callback Callback method","*/","SmartyStreets.prototype.geocode = function(value, callback) {","    var _this = this;","","    var params = {","      'street': value,","      'auth-id': this.auth_id,","      'auth-token': this.auth_token,","      'format': 'json'","    };","","    this.httpAdapter.get(this._endpoint,params,function(err, result){","      if(err) {","        return callback(err);","      } else {","        var results = [];","","        result.forEach(function(result) {","          results.push(_this._formatResult(result));","        });","","        results.raw = result;","        callback(false, results);","      }","    });","};","","module.exports = SmartyStreets;",""],"l":{"1":1,"9":1,"10":0,"12":0,"13":0,"16":0,"17":0,"20":1,"22":1,"30":1,"31":0,"32":0,"35":0,"41":1,"42":0,"43":0,"64":1,"65":0,"67":0,"74":0,"75":0,"76":0,"78":0,"80":0,"81":0,"84":0,"85":0,"90":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"TeleportGeocoder","line":7,"loc":{"start":{"line":7,"column":23},"end":{"line":7,"column":71}}},"2":{"name":"getEmbeddedPath","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":38},"end":{"line":40,"column":64}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":54},"end":{"line":47,"column":76}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":43},"end":{"line":67,"column":90}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":38},"end":{"line":104,"column":64}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":66},"end":{"line":114,"column":88}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":59}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":44}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":50}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"9":{"start":{"line":17,"column":0},"end":{"line":32,"column":1}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"11":{"start":{"line":19,"column":2},"end":{"line":30,"column":3}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":23}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}},"17":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"18":{"start":{"line":27,"column":6},"end":{"line":27,"column":23}},"19":{"start":{"line":29,"column":4},"end":{"line":29,"column":19}},"20":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}},"21":{"start":{"line":40,"column":0},"end":{"line":65,"column":2}},"22":{"start":{"line":41,"column":2},"end":{"line":41,"column":19}},"23":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"24":{"start":{"line":44,"column":2},"end":{"line":44,"column":24}},"25":{"start":{"line":45,"column":2},"end":{"line":45,"column":101}},"26":{"start":{"line":47,"column":2},"end":{"line":64,"column":5}},"27":{"start":{"line":48,"column":4},"end":{"line":63,"column":5}},"28":{"start":{"line":49,"column":6},"end":{"line":49,"column":27}},"29":{"start":{"line":51,"column":6},"end":{"line":51,"column":23}},"30":{"start":{"line":53,"column":6},"end":{"line":59,"column":7}},"31":{"start":{"line":54,"column":8},"end":{"line":54,"column":81}},"32":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"33":{"start":{"line":56,"column":10},"end":{"line":56,"column":48}},"34":{"start":{"line":57,"column":10},"end":{"line":57,"column":87}},"35":{"start":{"line":61,"column":6},"end":{"line":61,"column":27}},"36":{"start":{"line":62,"column":6},"end":{"line":62,"column":31}},"37":{"start":{"line":67,"column":0},"end":{"line":96,"column":2}},"38":{"start":{"line":68,"column":2},"end":{"line":68,"column":55}},"39":{"start":{"line":69,"column":2},"end":{"line":69,"column":67}},"40":{"start":{"line":70,"column":2},"end":{"line":70,"column":60}},"41":{"start":{"line":71,"column":2},"end":{"line":71,"column":66}},"42":{"start":{"line":72,"column":2},"end":{"line":72,"column":49}},"43":{"start":{"line":73,"column":2},"end":{"line":78,"column":4}},"44":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"45":{"start":{"line":80,"column":4},"end":{"line":80,"column":43}},"46":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"47":{"start":{"line":83,"column":4},"end":{"line":83,"column":57}},"48":{"start":{"line":86,"column":2},"end":{"line":95,"column":4}},"49":{"start":{"line":104,"column":0},"end":{"line":133,"column":2}},"50":{"start":{"line":105,"column":2},"end":{"line":105,"column":22}},"51":{"start":{"line":106,"column":2},"end":{"line":106,"column":22}},"52":{"start":{"line":107,"column":2},"end":{"line":107,"column":31}},"53":{"start":{"line":109,"column":2},"end":{"line":109,"column":19}},"54":{"start":{"line":111,"column":2},"end":{"line":111,"column":18}},"55":{"start":{"line":112,"column":2},"end":{"line":112,"column":117}},"56":{"start":{"line":114,"column":2},"end":{"line":132,"column":5}},"57":{"start":{"line":115,"column":4},"end":{"line":131,"column":5}},"58":{"start":{"line":116,"column":6},"end":{"line":116,"column":16}},"59":{"start":{"line":118,"column":6},"end":{"line":118,"column":23}},"60":{"start":{"line":120,"column":6},"end":{"line":127,"column":7}},"61":{"start":{"line":121,"column":8},"end":{"line":121,"column":85}},"62":{"start":{"line":122,"column":8},"end":{"line":126,"column":9}},"63":{"start":{"line":123,"column":10},"end":{"line":123,"column":46}},"64":{"start":{"line":124,"column":10},"end":{"line":124,"column":80}},"65":{"start":{"line":125,"column":10},"end":{"line":125,"column":95}},"66":{"start":{"line":129,"column":6},"end":{"line":129,"column":27}},"67":{"start":{"line":130,"column":6},"end":{"line":130,"column":31}},"68":{"start":{"line":135,"column":0},"end":{"line":135,"column":34}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":28},"end":{"line":54,"column":74}},{"start":{"line":54,"column":78},"end":{"line":54,"column":80}}]},"6":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":15},"end":{"line":69,"column":60}},{"start":{"line":69,"column":64},"end":{"line":69,"column":66}}]},"7":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":53}},{"start":{"line":70,"column":57},"end":{"line":70,"column":59}}]},"8":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":19},"end":{"line":71,"column":59}},{"start":{"line":71,"column":63},"end":{"line":71,"column":65}}]},"9":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":25},"end":{"line":72,"column":42}},{"start":{"line":72,"column":46},"end":{"line":72,"column":48}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":25},"end":{"line":76,"column":46}},{"start":{"line":76,"column":50},"end":{"line":76,"column":52}}]},"11":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"12":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"14":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"15":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":28},"end":{"line":121,"column":78}},{"start":{"line":121,"column":82},"end":{"line":121,"column":84}}]}},"code":["var util = require('util');","var AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var TeleportGeocoder = function TeleportGeocoder(httpAdapter, options) {","  TeleportGeocoder.super_.call(this, httpAdapter, options);","","  var base = 'https://api.teleport.org/api';","  this._cities_endpoint = base + '/cities/';","  this._locations_endpoint = base + '/locations/';","};","","util.inherits(TeleportGeocoder, AbstractGeocoder);","","function getEmbeddedPath(parent, path) {","  var elements = path.split('/');","  for ( var i in elements) {","    var element = elements[i];","    var embedded = parent._embedded;","    if (!embedded) {","      return undefined;","    }","    var child = embedded[element];","    if (!child) {","      return undefined;","    }","    parent = child;","  }","  return parent;","}","","/**"," * Geocode"," *"," * @param <string>    value     Value to geocode (Address)"," * @param <function>  callback  Callback method"," */","TeleportGeocoder.prototype._geocode = function(value, callback) {","  var _this = this;","","  var params = {};","  params.search = value;","  params.embed = 'city:search-results/city:item/{city:country,city:admin1_division,city:urban_area}';","","  this.httpAdapter.get(this._cities_endpoint, params, function(err, result) {","    if (err) {","      return callback(err);","    } else {","      var results = [];","","      if (result) {","        var searchResults = getEmbeddedPath(result, 'city:search-results') || [];","        for (var i in searchResults) {","          var confidence = (25 - i) / 25.0 * 10;","          results.push(_this._formatResult(searchResults[i], 'city:item', confidence));","        }","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","TeleportGeocoder.prototype._formatResult = function(result, cityRelationName, confidence) {","  var city = getEmbeddedPath(result, cityRelationName);","  var admin1 = getEmbeddedPath(city, 'city:admin1_division') || {};","  var country = getEmbeddedPath(city, 'city:country') || {};","  var urban_area = getEmbeddedPath(city, 'city:urban_area') || {};","  var urban_area_links = urban_area._links || {};","  var extra = {","    confidence: confidence,","    urban_area: urban_area.name,","    urban_area_api_url: (urban_area_links.self || {}).href,","    urban_area_web_url: urban_area.teleport_city_url","  };","  if (result.distance_km) {","    extra.distance_km = result.distance_km;","  }","  if (result.matching_full_name) {","    extra.matching_full_name = result.matching_full_name;","  }","","  return {","    'latitude': city.location.latlon.latitude,","    'longitude': city.location.latlon.longitude,","    'city': city.name,","    'country': country.name,","    'countryCode': country.iso_alpha2,","    'state': admin1.name,","    'stateCode': admin1.geonames_admin1_code,","    'extra': extra","  };","};","","/**"," * Reverse geocoding"," *"," * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude"," * @param <function> callback          Callback method"," */","TeleportGeocoder.prototype._reverse = function(query, callback) {","  var lat = query.lat;","  var lng = query.lon;","  var suffix = lat + ',' + lng;","","  var _this = this;","","  var params = {};","  params.embed = 'location:nearest-cities/location:nearest-city/{city:country,city:admin1_division,city:urban_area}';","","  this.httpAdapter.get(this._locations_endpoint + suffix, params, function(err, result) {","    if (err) {","      throw err;","    } else {","      var results = [];","","      if (result) {","        var searchResults = getEmbeddedPath(result, 'location:nearest-cities') || [];","        for ( var i in searchResults) {","          var searchResult = searchResults[i];","          var confidence = Math.max(0, 25 - searchResult.distance_km) / 25 * 10;","          results.push(_this._formatResult(searchResult, 'location:nearest-city', confidence));","        }","      }","","      results.raw = result;","      callback(false, results);","    }","  });","};","","module.exports = TeleportGeocoder;",""],"l":{"1":1,"2":1,"7":1,"8":0,"10":0,"11":0,"12":0,"15":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"29":0,"31":0,"40":1,"41":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"61":0,"62":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"79":0,"80":0,"82":0,"83":0,"86":0,"104":1,"105":0,"106":0,"107":0,"109":0,"111":0,"112":0,"114":0,"115":0,"116":0,"118":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"129":0,"130":0,"135":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/opendatafrancegeocoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/geocoder/opendatafrancegeocoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"OpendataFranceGeocoder","line":7,"loc":{"start":{"line":7,"column":29},"end":{"line":7,"column":83}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":44},"end":{"line":24,"column":70}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":49},"end":{"line":51,"column":71}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":49},"end":{"line":76,"column":66}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":44},"end":{"line":125,"column":70}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":58},"end":{"line":136,"column":80}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":52},"end":{"line":164,"column":62}}},"8":{"name":"(anonymous_8)","line":181,"loc":{"start":{"line":181,"column":48},"end":{"line":181,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":53}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":67}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"8":{"start":{"line":24,"column":0},"end":{"line":74,"column":2}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":41}},"11":{"start":{"line":29,"column":4},"end":{"line":48,"column":5}},"12":{"start":{"line":30,"column":6},"end":{"line":30,"column":23}},"13":{"start":{"line":32,"column":6},"end":{"line":34,"column":7}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":33}},"15":{"start":{"line":35,"column":6},"end":{"line":38,"column":7}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":31}},"18":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":40}},"20":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":33}},"22":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":41}},"24":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"25":{"start":{"line":51,"column":4},"end":{"line":72,"column":7}},"26":{"start":{"line":52,"column":8},"end":{"line":70,"column":9}},"27":{"start":{"line":53,"column":12},"end":{"line":53,"column":33}},"28":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"29":{"start":{"line":57,"column":14},"end":{"line":57,"column":55}},"30":{"start":{"line":60,"column":12},"end":{"line":60,"column":29}},"31":{"start":{"line":62,"column":12},"end":{"line":66,"column":13}},"32":{"start":{"line":63,"column":14},"end":{"line":65,"column":15}},"33":{"start":{"line":64,"column":16},"end":{"line":64,"column":70}},"34":{"start":{"line":68,"column":12},"end":{"line":68,"column":33}},"35":{"start":{"line":69,"column":12},"end":{"line":69,"column":37}},"36":{"start":{"line":76,"column":0},"end":{"line":118,"column":2}},"37":{"start":{"line":78,"column":4},"end":{"line":78,"column":50}},"38":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"39":{"start":{"line":80,"column":6},"end":{"line":80,"column":38}},"40":{"start":{"line":83,"column":4},"end":{"line":83,"column":51}},"41":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"42":{"start":{"line":85,"column":6},"end":{"line":85,"column":40}},"43":{"start":{"line":88,"column":4},"end":{"line":88,"column":39}},"44":{"start":{"line":90,"column":4},"end":{"line":101,"column":6}},"45":{"start":{"line":103,"column":4},"end":{"line":115,"column":5}},"46":{"start":{"line":104,"column":6},"end":{"line":104,"column":52}},"47":{"start":{"line":105,"column":6},"end":{"line":105,"column":59}},"48":{"start":{"line":106,"column":11},"end":{"line":115,"column":5}},"49":{"start":{"line":107,"column":6},"end":{"line":107,"column":50}},"50":{"start":{"line":108,"column":11},"end":{"line":115,"column":5}},"51":{"start":{"line":109,"column":6},"end":{"line":109,"column":56}},"52":{"start":{"line":110,"column":6},"end":{"line":110,"column":56}},"53":{"start":{"line":111,"column":11},"end":{"line":115,"column":5}},"54":{"start":{"line":112,"column":6},"end":{"line":112,"column":56}},"55":{"start":{"line":113,"column":11},"end":{"line":115,"column":5}},"56":{"start":{"line":114,"column":6},"end":{"line":114,"column":50}},"57":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"58":{"start":{"line":125,"column":0},"end":{"line":157,"column":2}},"59":{"start":{"line":127,"column":4},"end":{"line":127,"column":21}},"60":{"start":{"line":129,"column":4},"end":{"line":129,"column":41}},"61":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"62":{"start":{"line":131,"column":6},"end":{"line":131,"column":23}},"63":{"start":{"line":132,"column":6},"end":{"line":132,"column":20}},"64":{"start":{"line":134,"column":4},"end":{"line":134,"column":30}},"65":{"start":{"line":136,"column":4},"end":{"line":156,"column":7}},"66":{"start":{"line":137,"column":8},"end":{"line":155,"column":9}},"67":{"start":{"line":138,"column":12},"end":{"line":138,"column":33}},"68":{"start":{"line":141,"column":10},"end":{"line":143,"column":11}},"69":{"start":{"line":142,"column":12},"end":{"line":142,"column":53}},"70":{"start":{"line":145,"column":10},"end":{"line":145,"column":27}},"71":{"start":{"line":147,"column":10},"end":{"line":151,"column":11}},"72":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"73":{"start":{"line":149,"column":14},"end":{"line":149,"column":68}},"74":{"start":{"line":153,"column":10},"end":{"line":153,"column":31}},"75":{"start":{"line":154,"column":10},"end":{"line":154,"column":35}},"76":{"start":{"line":164,"column":0},"end":{"line":179,"column":2}},"77":{"start":{"line":165,"column":4},"end":{"line":165,"column":20}},"78":{"start":{"line":167,"column":4},"end":{"line":176,"column":5}},"79":{"start":{"line":168,"column":6},"end":{"line":168,"column":30}},"80":{"start":{"line":169,"column":6},"end":{"line":171,"column":7}},"81":{"start":{"line":170,"column":8},"end":{"line":170,"column":17}},"82":{"start":{"line":172,"column":6},"end":{"line":174,"column":7}},"83":{"start":{"line":173,"column":8},"end":{"line":173,"column":30}},"84":{"start":{"line":175,"column":6},"end":{"line":175,"column":20}},"85":{"start":{"line":178,"column":4},"end":{"line":178,"column":18}},"86":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"87":{"start":{"line":182,"column":2},"end":{"line":182,"column":20}},"88":{"start":{"line":185,"column":0},"end":{"line":185,"column":40}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":19}},{"start":{"line":35,"column":23},"end":{"line":35,"column":32}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"10":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"11":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"13":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"14":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":11},"end":{"line":106,"column":11}},{"start":{"line":106,"column":11},"end":{"line":106,"column":11}}]},"15":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":11},"end":{"line":108,"column":11}},{"start":{"line":108,"column":11},"end":{"line":108,"column":11}}]},"16":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":11}},{"start":{"line":111,"column":11},"end":{"line":111,"column":11}}]},"17":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":11},"end":{"line":113,"column":11}},{"start":{"line":113,"column":11},"end":{"line":113,"column":11}}]},"18":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"19":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":10},"end":{"line":141,"column":10}},{"start":{"line":141,"column":10},"end":{"line":141,"column":10}}]},"20":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":10},"end":{"line":147,"column":10}},{"start":{"line":147,"column":10},"end":{"line":147,"column":10}}]},"21":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"22":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]}},"code":["var util             = require('util'),","    AbstractGeocoder = require('./abstractgeocoder');","","/**"," * Constructor"," */","var OpendataFranceGeocoder = function OpendataFranceGeocoder(httpAdapter, options) {","    this.options = ['language','email','apiKey'];","","    OpendataFranceGeocoder.super_.call(this, httpAdapter, options);","};","","util.inherits(OpendataFranceGeocoder, AbstractGeocoder);","","OpendataFranceGeocoder.prototype._endpoint = 'http://api-adresse.data.gouv.fr/search';","","OpendataFranceGeocoder.prototype._endpoint_reverse = 'http://api-adresse.data.gouv.fr/reverse';","","/**","* Geocode","* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://opendatafrance/api/)","* @param <function> callback Callback method","*/","OpendataFranceGeocoder.prototype._geocode = function(value, callback) {","    var _this = this;","","    var params = this._getCommonParams();","","    if (typeof value == 'string') {","      params.q = value;","    } else {","      if (value.address) {","        params.q = value.address;","      }","      if (value.lat && value.lon) {","        params.lat = value.lat;","        params.lon = value.lon;","      }","      if (value.zipcode) {","        params.postcode = value.zipcode;","      }","      if (value.type) {","        params.type = value.type;","      }","      if (value.citycode) {","        params.citycode = value.citycode;","      }","    }","    this._forceParams(params);","","    this.httpAdapter.get(this._endpoint, params, function(err, result) {","        if (err) {","            return callback(err);","        } else {","","            if (result.error) {","              return callback(new Error(result.error));","            }","","            var results = [];","","            if (result.features) {","              for (var i = 0; i < result.features.length; i++) {","                results.push(_this._formatResult(result.features[i]));","              }","            }","","            results.raw = result;","            callback(false, results);","        }","","    });","","};","","OpendataFranceGeocoder.prototype._formatResult = function(result) {","","    var latitude = result.geometry.coordinates[1];","    if (latitude) {","      latitude = parseFloat(latitude);","    }","","    var longitude = result.geometry.coordinates[0];","    if (longitude) {","      longitude = parseFloat(longitude);","    }","","    var properties = result.properties;","","    var formatedResult = {","        latitude : latitude,","        longitude : longitude,","        state : properties.context,","        city : properties.city,","        zipcode : properties.postcode,","        citycode : properties.citycode,","        countryCode : 'FR',","        country : 'France',","        type: properties.type,","        id: properties.id","    };","","    if (properties.type === 'housenumber') {","      formatedResult.streetName = properties.street;","      formatedResult.streetNumber = properties.housenumber;","    } else if (properties.type === 'street') {","      formatedResult.streetName = properties.name;","    } else if (properties.type === 'city') {","      formatedResult.population = properties.population;","      formatedResult.adm_weight = properties.adm_weight;","    } else if (properties.type === 'village') {","      formatedResult.population = properties.population;","    } else if (properties.type === 'locality') {","      formatedResult.streetName = properties.name;","    }","","    return formatedResult;","};","","/**","* Reverse geocoding","* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2","* @param <function> callback Callback method","*/","OpendataFranceGeocoder.prototype._reverse = function(query, callback) {","","    var _this = this;","","    var params = this._getCommonParams();","    for (var k in query) {","      var v = query[k];","      params[k] = v;","    }","    this._forceParams(params);","","    this.httpAdapter.get(this._endpoint_reverse , params, function(err, result) {","        if (err) {","            return callback(err);","        } else {","","          if(result.error) {","            return callback(new Error(result.error));","          }","","          var results = [];","","          if (result.features) {","            for (var i = 0; i < result.features.length; i++) {","              results.push(_this._formatResult(result.features[i]));","            }","          }","","          results.raw = result;","          callback(false, results);","        }","    });","};","","/**","* Prepare common params","*","* @return <Object> common params","*/","OpendataFranceGeocoder.prototype._getCommonParams = function(){","    var params = {};","","    for (var k in this.options) {","      var v = this.options[k];","      if (!v) {","        continue;","      }","      if (k === 'language') {","        k = 'accept-language';","      }","      params[k] = v;","    }","","    return params;","};","","OpendataFranceGeocoder.prototype._forceParams = function(params){","  params.limit = 20;","};","","module.exports = OpendataFranceGeocoder;",""],"l":{"1":1,"7":1,"8":0,"10":0,"13":1,"15":1,"17":1,"24":1,"25":0,"27":0,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"49":0,"51":0,"52":0,"53":0,"56":0,"57":0,"60":0,"62":0,"63":0,"64":0,"68":0,"69":0,"76":1,"78":0,"79":0,"80":0,"83":0,"84":0,"85":0,"88":0,"90":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"117":0,"125":1,"127":0,"129":0,"130":0,"131":0,"132":0,"134":0,"136":0,"137":0,"138":0,"141":0,"142":0,"145":0,"147":0,"148":0,"149":0,"153":0,"154":0,"164":1,"165":0,"167":0,"168":0,"169":0,"170":0,"172":0,"173":0,"175":0,"178":0,"181":1,"182":0,"185":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/formatter/gpxformatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/formatter/gpxformatter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":19},"end":{"line":1,"column":30}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":32},"end":{"line":5,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":5,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":57}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":128}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":111}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":37}},"7":{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":86}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":20}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":15}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}}},"branchMap":{},"code":["var GpxFormatter = function() {","","};","","GpxFormatter.prototype.format = function(data) {","    var gpx = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';","    gpx += '<gpx version=\"1.1\" xmlns=\"http://www.topografix.com/GPX/1/1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"';","    gpx += ' xsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\"';","    gpx += ' creator=\"geocoder.js\">';","","    for (var i = 0; i < data.length; i++) {","        gpx += '<wpt lat=\"' + data[i].latitude + '\" lon=\"' + data[i].longitude + '\">';","        gpx += '<name></name>';","        gpx += '</wpt>';","    }","","    gpx += '</gpx>';","","    return gpx;","};","","module.exports = GpxFormatter;",""],"l":{"1":1,"5":1,"6":0,"7":0,"8":0,"9":0,"11":0,"12":0,"13":0,"14":0,"17":0,"19":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/formatter/stringformatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-geocoder/node_modules/node-geocoder/lib/formatter/stringformatter.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":22},"end":{"line":1,"column":40}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":35},"end":{"line":10,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":3,"column":4},"end":{"line":5,"column":5}},"3":{"start":{"line":4,"column":8},"end":{"line":4,"column":58}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"5":{"start":{"line":10,"column":0},"end":{"line":29,"column":2}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"7":{"start":{"line":14,"column":4},"end":{"line":26,"column":5}},"8":{"start":{"line":15,"column":8},"end":{"line":23,"column":46}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":19}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":4}},{"start":{"line":3,"column":4},"end":{"line":3,"column":4}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":16}},{"start":{"line":3,"column":20},"end":{"line":3,"column":43}}]}},"code":["var StringFormatter = function(pattern) {","","    if (!pattern || pattern === 'undefined') {","        throw new Error('StringFormatter need a pattern');","    }","","    this.pattern = pattern;","};","","StringFormatter.prototype.format = function(data) {","","    var strings = [];","","    for (var i = 0; i < data.length; i++) {","        var str = this.pattern","            .replace(/%n/, data[i].streetNumber)","            .replace(/%S/, data[i].streetName)","            .replace(/%z/, data[i].zipcode)","            .replace(/%P/, data[i].country)","            .replace(/%p/, data[i].countryCode)","            .replace(/%c/, data[i].city)","            .replace(/%T/, data[i].state)","            .replace(/%t/, data[i].stateCode);","","        strings.push(str);","    }","","    return strings;","};","","module.exports = StringFormatter;",""],"l":{"1":1,"3":0,"4":0,"7":0,"10":1,"12":0,"14":0,"15":0,"25":0,"28":0,"31":1}}}